{"pageProps":{"postData":{"id":"smf-spec-1","contentHtml":"<nav class=\"toc\"><ol class=\"toc-level toc-level-1\"><li class=\"toc-item toc-item-h1\"><a class=\"toc-link toc-link-h1\" href=\"#acknowledgement\">Acknowledgement</a><ol class=\"toc-level toc-level-2\"><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#mma-trademark-policies\">MMA Trademark Policies</a><ol class=\"toc-level toc-level-3\"><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#midi-trademark-and-logo\">MIDI Trademark and Logo</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#logo-licenses\">Logo Licenses</a></li></ol></li></ol></li><li class=\"toc-item toc-item-h1\"><a class=\"toc-link toc-link-h1\" href=\"#introduction\">Introduction</a></li><li class=\"toc-item toc-item-h1\"><a class=\"toc-link toc-link-h1\" href=\"#sequences-tracks-chunks-file-block-structure\">Sequences, Tracks, Chunks: File Block Structure</a><ol class=\"toc-level toc-level-2\"><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#variable-length-quantity\">Variable Length Quantity</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#files\">Files</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#chunks\">Chunks</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#chunk-types\">Chunk Types</a></li></ol></li><li class=\"toc-item toc-item-h1\"><a class=\"toc-link toc-link-h1\" href=\"#chunk-descriptions\">Chunk Descriptions</a><ol class=\"toc-level toc-level-2\"><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#header-chunks\">Header Chunks</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#midi-file-formats-0-1-and-2\">MIDI File Formats 0, 1 and 2</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#track-chunks\">Track Chunks</a><ol class=\"toc-level toc-level-3\"><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#mtrk-chunk\">MTrk chunk</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#delta-time\">delta-time</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#midi-event\">MIDI event</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#sysex-event\">sysex event</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#meta-event\">meta-event</a></li></ol></li></ol></li><li class=\"toc-item toc-item-h1\"><a class=\"toc-link toc-link-h1\" href=\"#meta-events\">Meta-Events</a><ol class=\"toc-level toc-level-2\"><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#meta-event-definitions\">Meta-Event Definitions</a><ol class=\"toc-level toc-level-3\"><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#ff-00-02-sequence-number\">FF 00 02 Sequence Number</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#ff-01-len-text-text-event\">FF 01 len text Text Event</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#ff-02-len-text-copyright-notice\">FF 02 len text Copyright Notice</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#ff-03-len-text-sequencetrack-name\">FF 03 len text Sequence/Track Name</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#ff-04-len-text-instrument-name\">FF 04 len text Instrument Name</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#ff-05-len-text-lyric\">FF 05 len text Lyric</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#ff-06-len-text-marker\">FF 06 len text Marker</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#ff-07-len-text-cue-point\">FF 07 len text Cue Point</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#ff-20-01-cc-midi-channel-prefix\">FF 20 01 cc MIDI Channel Prefix</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#ff-2f-00-end-of-track\">FF 2F 00 End of Track</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#ff-51-03-tttttt-set-tempo-in-microseconds-per-midi-quarter-note\">FF 51 03 tttttt Set Tempo (in microseconds per MIDI quarter-note)</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#ff-54-05-hr-mn-se-fr-ff-smpte-offset\">FF 54 05 hr mn se fr ff SMPTE Offset</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#ff-58-04-nn-dd-cc-bb-time-signature\">FF 58 04 nn dd cc bb Time Signature</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#ff-59-02-sf-mi-key-signature\">FF 59 02 sf mi Key Signature</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#ff-7f-len-data-sequencer-specific-meta-event\">FF 7F len data Sequencer Specific Meta-Event</a></li></ol></li></ol></li><li class=\"toc-item toc-item-h1\"><a class=\"toc-link toc-link-h1\" href=\"#appendix\">Appendix</a><ol class=\"toc-level toc-level-2\"><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#midi-messages\">MIDI Messages</a><ol class=\"toc-level toc-level-3\"><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#table-of-major-midi-messages\">Table of Major MIDI Messages</a><ol class=\"toc-level toc-level-4\"><li class=\"toc-item toc-item-h4\"><a class=\"toc-link toc-link-h4\" href=\"#channel-voice-messages\">Channel Voice Messages</a></li><li class=\"toc-item toc-item-h4\"><a class=\"toc-link toc-link-h4\" href=\"#channel-mode-messages\">Channel Mode Messages</a></li><li class=\"toc-item toc-item-h4\"><a class=\"toc-link toc-link-h4\" href=\"#system-common-messages\">System Common Messages</a></li><li class=\"toc-item toc-item-h4\"><a class=\"toc-link toc-link-h4\" href=\"#system-realtime-messages\">System Realtime Messages</a></li></ol></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#table-of-midi-controller-messages\">Table of MIDI Controller Messages</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#table-of-midi-note-numbers\">Table of MIDI Note Numbers</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#general-midi-instrument-patch-map\">General MIDI Instrument Patch Map</a><ol class=\"toc-level toc-level-4\"><li class=\"toc-item toc-item-h4\"><a class=\"toc-link toc-link-h4\" href=\"#gm-instrument-families\">GM Instrument Families</a></li><li class=\"toc-item toc-item-h4\"><a class=\"toc-link toc-link-h4\" href=\"#gm-instrument-patch-map\">GM Instrument Patch Map</a></li></ol></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#general-midi-percussion-key-map\">General MIDI Percussion Key Map</a></li></ol></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#program-fragments-and-example-midi-files\">Program Fragments and Example MIDI Files</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#universal-system-exclusive-messages\">Universal System Exclusive Messages</a><ol class=\"toc-level toc-level-3\"><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#table-non-real-time-7eh\">Table: Non-Real Time (7EH)</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#table-real-time-7fh---universal-system-exclusive-messages\">Table: Real Time (7FH) - Universal System Exclusive Messages</a></li></ol></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#midi-time-code\">MIDI Time Code</a><ol class=\"toc-level toc-level-3\"><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#notation-information\">Notation Information</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#setup-message\">Setup Message</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#special-00\">Special (00)</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#punch-in-01-and-punch-out-02\">Punch In (01) and Punch Out (02)</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#delete-punch-in-03-and-delete-punch-out-04\">Delete Punch In (03) and Delete Punch Out (04)</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#event-start-05-and-event-stop-06\">Event Start (05) and Event Stop (06)</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#event-start-07-and-event-stop-08-with-additional-info\">Event Start (07) and Event Stop (08) with additional info</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#delete-event-start-09-and-delete-event-stop-0a\">Delete Event Start (09) and Delete Event Stop (0A)</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#cue-point-0b\">Cue Point (0B)</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#cue-point-0c-with-additional-info\">Cue Point (0C) with additional info</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#delete-cue-point-0d\">Delete Cue Point (0D)</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#event-name-0e-with-additional-info\">Event Name (0E) with additional info</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#play-mode\">Play Mode</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#cue-mode\">Cue Mode</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#fast-forward-or-rewind-mode\">Fast Forward or Rewind Mode</a></li></ol></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#general-midi-level-2-1999\">General MIDI Level 2 (1999)</a><ol class=\"toc-level toc-level-3\"><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#gm2-supported-nrpn-parameter-numbers-rpn\">GM2 Supported NRPN Parameter Numbers (RPN)</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#supported-universal-system-exclusive-sysex-messages\">Supported Universal System Exclusive (SysEx) messages</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#additional-percussion-kit-key-mappings\">Additional Percussion Kit Key-Mappings</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#bank-1\">BANK 1</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#bank-2\">BANK 2</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#bank-3\">BANK 3</a></li><li class=\"toc-item toc-item-h3\"><a class=\"toc-link toc-link-h3\" href=\"#banks-4-8\">BANKS 4-8</a></li></ol></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#additional-standards\">Additional Standards</a></li><li class=\"toc-item toc-item-h2\"><a class=\"toc-link toc-link-h2\" href=\"#footnote-label\">Footnotes</a></li></ol></li></ol></nav><!-- margin-left: 0.5in\r\nmargin-right: 0.5in\r\nmargin-top: 0.5in\r\nmargin-bottom: 0.5in\r\nmainfont: FreeSans\r\ncolorlinks: true\r\nlinkcolor:  MidnightBlue\r\nfilecolor:  MidnightBlue\r\ncitecolor:  MidnightBlue\r\nurlcolor:   MidnightBlue\r\ntoccolor:   MidnightBlue\r\nemail: tfwroble\\@gmail.com\r\npapersize: 'a5'\r\ntoc-depth: 4\r\nlot: true\r\nlof: true -->\n<!-- documentclass: scrartcl -->\n<!-- documentclass: scrreprt -->\n<!-- documentclass: scrbook -->\n<!-- date: ~November 1999 -->\n<!-- [SMF-1.1-1999.pdf]: SMF-1.1-1999.pdf \"SMF-1.1-1999.pdf - local document\" -->\n<!-- [midispec.pdf]: midispec.pdf \"MIDI Specification 1.0 (mtc.pdf - local document)\" -->\n<!-- [mtc.pdf]: mtc.pdf \"MIDI Time Code (mtc.pdf - local document)\" -->\n<!--\\\\ \\pagebreak \\\\-->\n<p><img src=\"/images/smfio/logo2.png\" alt=\"\"></p>\n<!-- MiKTeX (windows command) -->\n<!--\r\npandoc -s --toc -t latex+abbreviations+smart+abbreviations+auto_identifiers+autolink_bare_uris+backtick_code_blocks+definition_lists+escaped_line_breaks+example_lists+fancy_lists+fenced_code_attributes+footnotes+header_attributes+implicit_figures+implicit_header_references+inline_notes+link_attributes+startnum+strikeout+table_captions+yaml_metadata_block --pdf-engine=xelatex  \"[abs-path-to-file-dir]\\20180926 SMF-1.1-1999.md\" -o \"SMF-1.1-1999.pdf\"\r\n-->\n<!-- mainfont: Roboto Slab -->\n<h1 id=\"acknowledgement\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#acknowledgement\"><span class=\"icon icon-link\"></span></a>Acknowledgement</h1>\n<pre class=\"language-text\"><code class=\"language-text code-highlight\"><span class=\"code-line\">--------------------------------------------------------------\r\n</span><span class=\"code-line\">This document was originally distributed in text format by\r\n</span><span class=\"code-line\">The International MIDI Association.\r\n</span><span class=\"code-line\">\r\n</span><span class=\"code-line\">I have updated it and added new Appendices.\r\n</span><span class=\"code-line\">\r\n</span><span class=\"code-line\">© Copyright 1999 David Back.\r\n</span><span class=\"code-line\">\r\n</span><span class=\"code-line\">\r\n</span><span class=\"code-line\">EMail: david@csw2.co.uk\r\n</span><span class=\"code-line\">Web:   http://www.csw2.co.uk\r\n</span><span class=\"code-line\">\r\n</span><span class=\"code-line\">THIS DOCUMENT MAY BE FREELY COPIED IN WHOLE OR IN PART\r\n</span><span class=\"code-line\">PROVIDED THE COPY CONTAINS THIS ACKNOWLEDGEMENT.\r\n</span><span class=\"code-line\">--------------------------------------------------------------\r\n</span><span class=\"code-line\">\r\n</span><span class=\"code-line\">SEP-OCT 2018 github.com/tfwio/smfio\r\n</span><span class=\"code-line\">\r\n</span><span class=\"code-line\">- Append/clarify GM2 info/tables\r\n</span><span class=\"code-line\">- Format to PDF (mmd->pandoc->xelatex->pdf)\n</span></code></pre>\n<!--\\\\ \\pagebreak \\\\-->\n<h2 id=\"mma-trademark-policies\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#mma-trademark-policies\"><span class=\"icon icon-link\"></span></a>MMA Trademark Policies</h2>\n<p>The term “MIDI”, the treatment of “MIDI” as used in the MIDI Association<sup><a href=\"#user-content-fn-tma\" id=\"user-content-fnref-tma\" data-footnote-ref aria-describedby=\"footnote-label\">1</a></sup> and MMA logos, and various other logos are all trademarks of the MMA and must only be used as directed below.</p>\n<h3 id=\"midi-trademark-and-logo\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#midi-trademark-and-logo\"><span class=\"icon icon-link\"></span></a>MIDI Trademark and Logo</h3>\n<p>“MIDI” refers to a series of copyrighted specifications (“MMA Specifications”) maintained and published by MMA (and AMEI in Japan). Products, services, and technologies (“Products”) based on the MMA Specifications are known, as “MIDI Products”, “MIDI Files”, etc. MMA has common law and other exclusive rights for the use of the term “MIDI” in conjunction with MMA Specifications and associated Products.</p>\n<ol>\n<li>\n<p>The term “MIDI” (whether alone or in conjunction with other terms or modifiers) may be used by other parties (a) in reference to Products that are compliant with MMA Specifications, and/or (b) in the name of a company that provides such Products, except as excluded by paragraph 2 (below). Permitted uses do not need to be approved in advance by MMA. Conversely, any use in reference to non-compliant Products and/or by a company that does not produce Products compliant with MMA Specifications is NOT ALLOWED.</p>\n</li>\n<li>\n<p>The use of the term “MIDI” in combination with other terms or words to identify Products that while compliant with MMA Specifications also have additional functions that are not set forth in an MMA Specification is likely to lead people to expect that MMA has standardized said functions which is deceptive trade practice, false advertising, and unfair competition, and such uses are not allowed by MMA. Only MMA may use the term “MIDI” in conjunction with the naming of a technology or specification.</p>\n</li>\n<li>\n<p>The treatment (font and design) of the term “MIDI” which appears in the MMA and TMA Logo (see web page header, above) and in logos licensed by MMA may not be used by any party without a license from MMA. At this time the only licenses that are available are listed below.</p>\n</li>\n</ol>\n<h3 id=\"logo-licenses\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#logo-licenses\"><span class=\"icon icon-link\"></span></a>Logo Licenses</h3>\n<p>The following Logos are available to MMA Members for use with compliant products.</p>\n<p>General MIDI Logos</p>\n<ul>\n<li>SMF Logos</li>\n<li>DLS Logos</li>\n<li>XMF Logos</li>\n</ul>\n<!--\\\\ \\pagebreak \\\\-->\n<h1 id=\"introduction\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#introduction\"><span class=\"icon icon-link\"></span></a>Introduction</h1>\n<!-- source/origin: [http://www.csw2.co.uk/tech/midi2.htm][midi2.htm]\r\n> [www.midi.org/specifications-old/item/the-midi-1-0-specification][midi.org spec] for official reference, addendas, etc.\r\n -->\n<p>This document details the structure of MIDI Files. The purpose of MIDI Files\r\nis to provide a way of interchanging time-stamped MIDI data between different\r\nprograms on the same or different computers. One of the primary design goals\r\nis compact representation, which makes it very appropriate for  disk-based\r\nfile format, but which might make it inappropriate for storing in memory for\r\nquick access by a sequencer program.</p>\n<p>MIDI Files contain one or more MIDI streams, with time information for each\r\nevent. Song, sequence, and track structures, tempo and time signature\r\ninformation, are all supported. Track names and other descriptive\r\ninformation may be stored with the MIDI data. This format supports multiple\r\ntracks and multiple sequences so that if the user of a program which supports\r\nmultiple tracks intends to move a file to another one, this format can allow\r\nthat to happen.</p>\n<p>The specification defines the 8-bit binary data stream used in the file. The\r\ndata can be stored in a binary file, nibbilized, 7-bit-ized for efficient\r\nMIDI transmission, converted to Hex ASCII, or translated symbolically to a\r\nprintable text file. This spec addresses what’s in the 8-bit stream. It does\r\nnot address how a MIDI File will be transmitted over MIDI.</p>\n<!--\\\\ \\pagebreak \\\\-->\n<h1 id=\"sequences-tracks-chunks-file-block-structure\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#sequences-tracks-chunks-file-block-structure\"><span class=\"icon icon-link\"></span></a>Sequences, Tracks, Chunks: File Block Structure</h1>\n<p>In this document, bit 0 means the least significant bit of a byte, and bit 7\r\nis the most significant.</p>\n<h2 id=\"variable-length-quantity\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#variable-length-quantity\"><span class=\"icon icon-link\"></span></a>Variable Length Quantity</h2>\n<p>Some numbers in MIDI Files are represented in a form called VARIABLE-LENGTH\r\nQUANTITY. These numbers are represented 7 bits per byte, most significant\r\nbits first. All bytes except the last have bit 7 set, and the last byte has\r\nbit 7 clear. If the number is between 0 and 127, it is thus represented\r\nexactly as one byte.</p>\n<p><strong>Some examples of numbers represented as variable-length quantities:</strong></p>\n<p><code>00000000</code> → <code>00</code><br>\n<code>00000040</code> → <code>40</code><br>\n<code>0000007F</code> → <code>7F</code><br>\n<code>00000080</code> → <code>81</code> <code>00</code><br>\n<code>00002000</code> → <code>C0</code> <code>00</code><br>\n<code>00003FFF</code> → <code>FF</code> <code>7F</code><br>\n<code>00004000</code> → <code>81</code> <code>80</code> <code>00</code><br>\n<code>00100000</code> → <code>C0</code> <code>80</code> <code>00</code><br>\n<code>001FFFFF</code> → <code>FF</code> <code>FF</code> <code>7F</code><br>\n<code>00200000</code> → <code>81</code> <code>80</code> <code>80</code> <code>00</code><br>\n<code>08000000</code> → <code>C0</code> <code>80</code> <code>80</code> <code>00</code><br>\n<code>0FFFFFFF</code> → <code>FF</code> <code>FF</code> <code>FF</code> <code>7F</code></p>\n<p>The largest number which is allowed is <code>0FFFFFFF</code> so that the variable-length\r\nrepresentations must fit in 32 bits in a routine to write variable-length\r\nnumbers. Theoretically, larger numbers are possible, but 2 x 10^8^\r\n96^ths^ of a  beat at a fast tempo of 500 beats per minute is four days,\r\nlong enough for any delta-time!</p>\n<!--\\\\ \\pagebreak \\\\-->\n<h2 id=\"files\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#files\"><span class=\"icon icon-link\"></span></a>Files</h2>\n<p>To any file system, a MIDI File is simply a series of 8-bit bytes. On the\r\nMacintosh, this byte stream is stored in the data fork of a file (with file\r\ntype ‘MIDI’), or on the Clipboard (with data type ‘MIDI’). Most other\r\ncomputers store 8-bit byte streams in files.</p>\n<h2 id=\"chunks\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#chunks\"><span class=\"icon icon-link\"></span></a>Chunks</h2>\n<p>MIDI Files are made up of -chunks-. Each chunk has a 4-character type and a\r\n32-bit length, which is the number of bytes in the chunk. This structure\r\nallows future chunk types to be designed which may be easily be ignored if\r\nencountered by a program written before the chunk type is introduced. Your\r\nprograms should EXPECT alien chunks and treat them as if they weren’t there.</p>\n<p>Each chunk begins with a 4-character ASCII type. It is followed by a 32-bit\r\nlength, most significant byte first (a length of 6 is stored as <code>00 00 00 06</code>).\r\nThis length refers to the number of bytes of data which follow: the eight\r\nbytes of type and length are not included. Therefore, a chunk with a length\r\nof 6 would actually occupy 14 bytes in the disk file.</p>\n<p>This chunk architecture is similar to that used by Electronic Arts’ IFF\r\nformat, and the chunks described herein could easily be placed in an IFF\r\nfile. The MIDI File itself is not an IFF file: it contains no nested chunks,\r\nand chunks are not constrained to be an even number of bytes long. Converting\r\nit to an IFF file is as easy as padding odd length chunks, and sticking the\r\nwhole thing inside a <code>FORM</code> chunk.</p>\n<!--\\\\ \\pagebreak \\\\-->\n<h2 id=\"chunk-types\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#chunk-types\"><span class=\"icon icon-link\"></span></a>Chunk Types</h2>\n<p>MIDI Files contain two types of chunks: header chunks and track chunks. A\r\n-header- chunk provides a minimal amount of information pertaining to the\r\nentire MIDI file. A -track- chunk contains a sequential stream of MIDI data\r\nwhich may contain information for up to 16 MIDI channels. The concepts of\r\nmultiple tracks, multiple MIDI outputs, patterns, sequences, and songs may\r\nall be implemented using several track chunks.</p>\n<p>A MIDI File always starts with a header chunk, and is followed by one or more\r\ntrack chunks.</p>\n<pre class=\"language-text\"><code class=\"language-text code-highlight\"><span class=\"code-line\">MThd &#x3C;length of header data>\r\n</span><span class=\"code-line\">&#x3C;header data>\r\n</span><span class=\"code-line\">MTrk &#x3C;length of track data>\r\n</span><span class=\"code-line\">&#x3C;track data>\r\n</span><span class=\"code-line\">MTrk &#x3C;length of track data>\r\n</span><span class=\"code-line\">&#x3C;track data>\r\n</span><span class=\"code-line\">…\n</span></code></pre>\n<!--\\\\ \\pagebreak \\\\-->\n<h1 id=\"chunk-descriptions\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#chunk-descriptions\"><span class=\"icon icon-link\"></span></a>Chunk Descriptions</h1>\n<h2 id=\"header-chunks\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#header-chunks\"><span class=\"icon icon-link\"></span></a>Header Chunks</h2>\n<p>The header chunk at the beginning of the file specifies some basic\r\ninformation about the data in the file.<br>\nHere’s the syntax of the complete chunk:</p>\n<p><code>&#x3C;Header Chunk></code> = <code>&#x3C;chunk type>&#x3C;length>&#x3C;format>&#x3C;ntrks>&#x3C;division></code></p>\n<p>As described above, <code>&#x3C;chunk type></code> is the four ASCII characters <code>‘MThd’</code>;\r\n<code>&#x3C;length></code> is a 32-bit representation of the number 6 (high byte first).</p>\n<p>The data section contains three 16-bit words, stored most-significant byte\r\nfirst.</p>\n<p>The first word, <code>&#x3C;format></code>, specifies the overall organisation of the file.\r\nOnly three values of <code>&#x3C;format></code> are specified:</p>\n<table>\n<thead>\n<tr>\n<th>Format</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>the file contains a single multi-channel track</td>\n</tr>\n<tr>\n<td>1</td>\n<td>the file contains one or more simultaneous tracks (or MIDI outputs) of a sequence</td>\n</tr>\n<tr>\n<td>2</td>\n<td>the file contains one or more sequentially independent single-track patterns</td>\n</tr>\n</tbody>\n</table>\n<p>More information about these formats is provided below.</p>\n<p>The next word, <code>&#x3C;ntrks></code>, is the number of track chunks in the file. It will\r\nalways be 1 for a format 0 file.</p>\n<p>The third word, <code>&#x3C;division></code>, specifies the meaning of the delta-times. It\r\nhas two formats, one for metrical time, and one for time-code-based time:</p>\n<table>\n<thead>\n<tr>\n<th>bit 15</th>\n<th>bits 14 thru 8</th>\n<th>bits 7 thru 0</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>ticks per quarter-note</td>\n<td></td>\n</tr>\n<tr>\n<td>1</td>\n<td>negative SMPTE format</td>\n<td>ticks per frame</td>\n</tr>\n</tbody>\n</table>\n<p>If bit 15 of <code>&#x3C;division></code> is zero, the bits 14 thru 0 represent the number of\r\ndelta time “ticks” which make up a quarter-note. For instance, if division is\r\n96, then a time interval of an eighth-note between two events in the file\r\nwould be 48.</p>\n<p>If bit 15 of <code>&#x3C;division></code> is a one, delta times in a file correspond to\r\nsubdivisions of a second, in a way consistent with SMPTE<sup><a href=\"#user-content-fn-smpte\" id=\"user-content-fnref-smpte\" data-footnote-ref aria-describedby=\"footnote-label\">2</a></sup> and MIDI\r\nTime Code.  Bits 14 thru 8 contain one of the four values -24, -25, -29, or\r\n-30, corresponding to the four standard SMPTE and MIDI Time Code formats (-29\r\ncorresponds to 30 drop frame), and represents the number of frames per\r\nsecond. These negative numbers are stored in two’s compliment form. The\r\nsecond byte (stored positive) is the resolution within a frame: typical\r\nvalues may be 4 (MIDI Time Code resolution), 8, 10, 80 (bit resolution), or 100.\r\nThis stream allows exact specifications of time-code-based tracks, but\r\nalso allows millisecond-based tracks by specifying 25 frames/sec and a\r\nresolution of 40 units per frame. If the events in a file are stored with a\r\nbit resolution of thirty-frame time code, the division word would be <code>E250</code>\r\nhex.</p>\n<!--\\\\ \\pagebreak \\\\-->\n<h2 id=\"midi-file-formats-0-1-and-2\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#midi-file-formats-0-1-and-2\"><span class=\"icon icon-link\"></span></a>MIDI File Formats 0, 1 and 2</h2>\n<p>A Format 0 file has a header chunk followed by one track chunk. It is the\r\nmost interchangeable representation of data. It is very useful for a simple\r\nsingle-track player in a program which needs to make synthesisers make\r\nsounds, but which is primarily concerned with something else such as mixers\r\nor sound effect boxes. It is very desirable to be able to produce such a\r\nformat, even if your program is track-based, in order to work with these\r\nsimple programs.</p>\n<p>A Format 1 or 2 file has a header chunk followed by one or more track chunks.\r\nprograms which support several simultaneous tracks should be able to save and\r\nread data in format 1, a vertically one dimensional form, that is, as a\r\ncollection of tracks. Programs which support several independent patterns\r\nshould be able to save and read data in format 2, a horizontally one\r\ndimensional form. Providing these minimum capabilities will ensure maximum\r\ninterchangeability.</p>\n<p>In a MIDI system with a computer and a SMPTE synchroniser which uses Song\r\nPointer and Timing Clock, tempo maps (which describe the tempo throughout the\r\ntrack, and may also include time signature information, so that the bar\r\nnumber may be derived) are generally created on the computer. To use them\r\nwith the synchroniser, it is necessary to transfer them from the computer. To\r\nmake it easy for the synchroniser to extract this data from a MIDI File,\r\ntempo information should always be stored in the first <code>MTrk</code> chunk. For a\r\nformat 0 file, the tempo will be scattered through the track and the tempo\r\nmap reader should ignore the intervening events; for a format 1 file, the\r\ntempo map must be stored as the first track. It is polite to a tempo map\r\nreader to offer your user the ability to make a format 0 file with just the\r\ntempo, unless you can use format 1.</p>\n<p>All MIDI Files should specify tempo and time signature. If they don’t, the\r\ntime signature is assumed to be <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mn>4</mn><mn>4</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{4}{4}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1901em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">4</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">4</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span>, and the tempo 120 beats per\r\nminute. In format 0, these meta-events should occur at least at the beginning\r\nof the single multi-channel track. In format 1, these meta-events should be\r\ncontained in the first track. In format 2, each of the temporally independent\r\npatterns should contain at least initial time signature and tempo information.</p>\n<p>Format IDs to support other structures may be defined in the future. A\r\nprogram encountering an unknown format ID may still read other <code>MTrk</code> chunks\r\nit finds from the file, as format 1 or 2, if its user can make sense of them\r\nand arrange them into some other structure if appropriate. Also, more\r\nparameters may be added to the <code>MThd</code> chunk in the future: it is important to\r\nread and honour the length, even if it is longer than 6.</p>\n<!--\\\\ \\pagebreak \\\\-->\n<h2 id=\"track-chunks\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#track-chunks\"><span class=\"icon icon-link\"></span></a>Track Chunks</h2>\n<p>The track chunks (type <code>MTrk</code>) are where actual song data is stored. Each track\r\nchunk is simply a stream of MIDI events (and non-MIDI events), preceded by\r\ndelta-time values. The format for Track Chunks (described below) is exactly\r\nthe same for all three formats (0, 1, and 2: see\r\n“[Header Chunk][Header Chunks]” above) of MIDI Files.</p>\n<h3 id=\"mtrk-chunk\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#mtrk-chunk\"><span class=\"icon icon-link\"></span></a>MTrk chunk</h3>\n<p>Here is the syntax of an <code>MTrk</code> chunk (the + means “one or more”: at least one\r\n<code>MTrk</code> event must be present):</p>\n<p><strong><code>&#x3C;Track Chunk></code> = <code>&#x3C;chunk type>&#x3C;length>&#x3C;MTrk event></code>+</strong></p>\n<p>The syntax of an <code>MTrk</code> event is very simple:</p>\n<p><strong><code>&#x3C;MTrk event></code> = <code>&#x3C;delta-time>&#x3C;event></code></strong></p>\n<h3 id=\"delta-time\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#delta-time\"><span class=\"icon icon-link\"></span></a>delta-time</h3>\n<p><code>&#x3C;delta-time></code> is stored as a variable-length quantity. It represents the\r\namount of time before the following event. If the first event in a track\r\noccurs at the very beginning of a track, or if two events occur\r\nsimultaneously, a delta-time of zero is used. Delta-times are always\r\npresent. (Not storing delta-times of 0 requires at least two bytes for any\r\nother value, and most delta-times aren’t zero.) Delta-time is in some\r\nfraction of a beat (or a second, for recording a track with SMPTE times), as\r\nspecified in the header chunk.</p>\n<p><strong><code>&#x3C;event></code> = <code>&#x3C;MIDI event></code> | <code>&#x3C;sysex event></code> | <code>&#x3C;meta-event></code></strong></p>\n<h3 id=\"midi-event\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#midi-event\"><span class=\"icon icon-link\"></span></a>MIDI event</h3>\n<p><code>&#x3C;MIDI event></code> is any MIDI channel message See Appendix 1 - [MIDI Messages].\r\nRunning status is used: status bytes of MIDI channel messages may be omitted\r\nif the preceding event is a MIDI channel message with the same status. The\r\nfirst event in each <code>MTrk</code> chunk must specify status. Delta-time is not\r\nconsidered an event itself: it is an integral part of the syntax for an <code>MTrk</code>\r\nevent. Notice that running status occurs across delta-times.</p>\n<!--\\\\ \\pagebreak \\\\-->\n<h3 id=\"sysex-event\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#sysex-event\"><span class=\"icon icon-link\"></span></a>sysex event</h3>\n<p><code>&#x3C;sysex event></code> is used to specify a MIDI system exclusive message, either as\r\none unit or in packets, or as an “escape” to specify any arbitrary bytes to\r\nbe transmitted. See Appendix 1 - [MIDI Messages]. A normal complete system\r\nexclusive message is stored in a MIDI File in this way:</p>\n<p><strong><code>F0</code> <code>&#x3C;length></code> <code>&#x3C;bytes to be transmitted after F0></code></strong></p>\n<p>The length is stored as a variable-length quantity. It specifies the number\r\nof bytes which follow it, not including the F0 or the length itself. For\r\ninstance, the transmitted message <code>F0 43 12 00 07 F7</code> would be stored in a\r\nMIDI File as <code>F0 05 43 12 00 07 F7</code>. It is required to include the <code>F7</code> at the\r\nend so that the reader of the MIDI File knows that it has read the entire\r\nmessage.</p>\n<p>Another form of sysex event is provided which does not imply that an <code>F0</code>\r\nshould be transmitted. This may be used as an “escape” to provide for the\r\ntransmission of things which would not otherwise be legal, including system\r\nrealtime messages, song pointer or select, MIDI Time Code, etc. This uses the\r\n<code>F7</code> code:</p>\n<p><strong><code>F7</code> <code>&#x3C;length></code> <code>&#x3C;all bytes to be transmitted></code></strong></p>\n<p>Unfortunately, some synthesiser manufacturers specify that their system\r\nexclusive messages are to be transmitted as little packets. Each packet is\r\nonly part of an entire syntactical system exclusive message, but the times\r\nthey are transmitted are important. Examples of this are the bytes sent in a\r\nCZ patch dump, or the <code>FB</code>-<code>01</code>’s “system exclusive mode” in which microtonal\r\ndata can be transmitted. The <code>F0</code> and <code>F7</code> sysex events may be used together\r\nto break up syntactically complete system exclusive messages into timed\r\npackets.</p>\n<p>An <code>F0</code> sysex event is used for the first packet in a series – it is a\r\nmessage in which the <code>F0</code> should be transmitted. An <code>F7</code> sysex event is used\r\nfor the remainder of the packets, which do not begin with <code>F0</code>. (Of course,\r\nthe <code>F7</code> is not considered part of the system exclusive message).</p>\n<p>A syntactic system exclusive message must always end with an <code>F7</code>, even if the\r\nreal-life device didn’t send one, so that you know when you’ve reached the\r\nend of an entire sysex message without looking ahead to the next event in the\r\nMIDI File. If it’s stored in one complete <code>F0</code> sysex event, the last byte must\r\nbe an <code>F7</code>. There also must not be any transmittable MIDI events in between\r\nthe packets of a multi-packet system exclusive message. This principle is\r\nillustrated in the paragraph below.</p>\n<p>Here is a MIDI File of a multi-packet system exclusive message: suppose the\r\nbytes <code>F0 43 12 00</code> were to be sent, followed by a 200-tick delay, followed by\r\nthe bytes <code>43 12 00 43 12 00</code>, followed by a 100-tick delay, followed by the\r\nbytes <code>43 12 00 F7</code>, this would be in the MIDI File:</p>\n<table>\n<thead>\n<tr>\n<th>hex</th>\n<th>value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>F0 03 43 12 00</td>\n<td></td>\n</tr>\n<tr>\n<td>81 48</td>\n<td>200-tick delta time</td>\n</tr>\n<tr>\n<td>F7 06 43 12 00 43 12 00</td>\n<td></td>\n</tr>\n<tr>\n<td>64</td>\n<td>100-tick delta time</td>\n</tr>\n<tr>\n<td>F7 04 43 12 00 F7</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>When reading a MIDI File, and an <code>F7</code> sysex event is encountered without a\r\npreceding <code>F0</code> sysex event to start a multi-packet system exclusive message\r\nsequence, it should be presumed that the <code>F7</code> event is being used as an\r\n“escape”. In this case, it is not necessary that it end with an <code>F7</code>, unless\r\nit is desired that the <code>F7</code> be transmitted.</p>\n<h3 id=\"meta-event\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#meta-event\"><span class=\"icon icon-link\"></span></a>meta-event</h3>\n<p><code>&#x3C;meta-event></code> specifies non-MIDI information useful to this format or to\r\nsequencers, with this syntax:</p>\n<p><strong><code>FF</code> <code>&#x3C;type></code> <code>&#x3C;length></code> <code>&#x3C;bytes></code></strong></p>\n<p>All meta-events begin with <code>FF</code>, then have an event type byte (which is always\r\nless than 128), and then have the length of the data stored as a\r\nvariable-length quantity, and then the data itself. If there is no data, the\r\nlength is 0. As with chunks, future meta-events may be designed which may not\r\nbe known to existing programs, so programs must properly ignore meta-events\r\nwhich they do not recognise, and indeed should expect to see them. Programs\r\nmust never ignore the length of a meta-event which they do not recognise, and\r\nthey shouldn’t be surprised if it’s bigger than expected. If so, they must\r\nignore everything past what they know about. However, they must not add\r\nanything of their own to the end of the meta-event. Sysex events and meta\r\nevents cancel any running status which was in effect. Running status does not\r\napply to and may not be used for these messages.</p>\n<!--\\\\ \\pagebreak \\\\-->\n<h1 id=\"meta-events\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#meta-events\"><span class=\"icon icon-link\"></span></a>Meta-Events</h1>\n<p>A few meta-events are defined herein. It is not required for every program to\r\nsupport every meta-event.</p>\n<p>In the syntax descriptions for each of the meta-events a set of conventions\r\nis used to describe parameters of the events. The <code>FF</code> which begins each event,\r\nthe type of each event, and the lengths of events which do not have a\r\nvariable amount of data are given directly in hexadecimal. A notation such as\r\n<code>dd</code> or <code>se</code>, which consists of two lower-case letters, mnemonically\r\nrepresents an 8-bit value. Four identical lower-case letters such as <code>wwww</code>\r\nmnemonically refer to a 16-bit value, stored most-significant-byte first. Six\r\nidentical lower-case letters such as <code>tttttt</code> refer to a 24-bit value, stored\r\nmost-significant-byte first. The notation <code>len</code> refers to the length portion\r\nof the meta-event syntax, that is, a number, stored as a variable- length\r\nquantity, which specifies how many bytes (possibly text) data were just\r\nspecified by the length.</p>\n<p>In general, meta-events in a track which occur at the same time may occur in\r\nany order. If a copyright event is used, it should be placed as early as\r\npossible in the file, so it will be noticed easily. Sequence Number and\r\nSequence/Track Name events, if present, must appear at time 0. An\r\nend-of-track event must occur as the last event in the track.</p>\n<h2 id=\"meta-event-definitions\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#meta-event-definitions\"><span class=\"icon icon-link\"></span></a>Meta-Event Definitions</h2>\n<h3 id=\"ff-00-02-sequence-number\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ff-00-02-sequence-number\"><span class=\"icon icon-link\"></span></a>FF 00 02 Sequence Number</h3>\n<p>This optional event, which must occur at the beginning of a track, before any\r\nnonzero delta-times, and before any transmittable MIDI events, specifies the\r\nnumber of a sequence. In a format 2 MIDI File, it is used to identify each\r\n“pattern” so that a “song” sequence using the Cue message can refer to the\r\npatterns. If the ID numbers are omitted, the sequences’ locations in order in\r\nthe file are used as defaults. In a format 0 or 1 MIDI File, which only\r\ncontain one sequence, this number should be contained in the first (or only)\r\ntrack. If transfer of several multitrack sequences is required, this must be\r\ndone as a group of format 1 files, each with a different sequence number.</p>\n<h3 id=\"ff-01-len-text-text-event\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ff-01-len-text-text-event\"><span class=\"icon icon-link\"></span></a>FF 01 len text Text Event</h3>\n<p>Any amount of text describing anything. It is a good idea to put a text event\r\nright at the beginning of a track, with the name of the track, a description\r\nof its intended orchestration, and any other information which the user wants\r\nto put there. Text events may also occur at other times in a track, to be\r\nused as lyrics, or descriptions of cue points. The text in this event should\r\nbe printable ASCII characters for maximum interchange. However, other\r\ncharacter codes using the high-order bit may be used for interchange of files\r\nbetween different programs on the same computer which supports an extended\r\ncharacter set. Programs on a computer which does not support non-ASCII\r\ncharacters should ignore those characters.</p>\n<p>Meta-event types <code>01</code> through <code>0F</code> are reserved for various types of text\r\nevents, each of which meets the specification of text events (above) but is\r\nused for a different purpose:</p>\n<h3 id=\"ff-02-len-text-copyright-notice\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ff-02-len-text-copyright-notice\"><span class=\"icon icon-link\"></span></a>FF 02 len text Copyright Notice</h3>\n<p>Contains a copyright notice as printable ASCII text. The notice should\r\ncontain the characters (C), the year of the copyright, and the owner of the\r\ncopyright. If several pieces of music are in the same MIDI File, all of the\r\ncopyright notices should be placed together in this event so that it will be\r\nat the beginning of the file. This event should be the first event in the\r\ntrack chunk, at time 0.</p>\n<h3 id=\"ff-03-len-text-sequencetrack-name\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ff-03-len-text-sequencetrack-name\"><span class=\"icon icon-link\"></span></a>FF 03 len text Sequence/Track Name</h3>\n<p>If in a format 0 track, or the first track in a format 1 file, the name of\r\nthe sequence. Otherwise, the name of the track.</p>\n<h3 id=\"ff-04-len-text-instrument-name\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ff-04-len-text-instrument-name\"><span class=\"icon icon-link\"></span></a>FF 04 len text Instrument Name</h3>\n<p>A description of the type of instrumentation to be used in that track. May\r\nbe used with the MIDI Prefix meta-event to specify which MIDI channel the\r\ndescription applies to, or the channel may be specified as text in the event\r\nitself.</p>\n<h3 id=\"ff-05-len-text-lyric\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ff-05-len-text-lyric\"><span class=\"icon icon-link\"></span></a>FF 05 len text Lyric</h3>\n<p>A lyric to be sung. Generally, each syllable will be a separate lyric event\r\nwhich begins at the event’s time.</p>\n<h3 id=\"ff-06-len-text-marker\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ff-06-len-text-marker\"><span class=\"icon icon-link\"></span></a>FF 06 len text Marker</h3>\n<p>Normally in a format 0 track, or the first track in a format 1 file. The name\r\nof that point in the sequence, such as a rehearsal letter or section name\r\n(“First Verse”, etc.)</p>\n<h3 id=\"ff-07-len-text-cue-point\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ff-07-len-text-cue-point\"><span class=\"icon icon-link\"></span></a>FF 07 len text Cue Point</h3>\n<p>A description of something happening on a film or video screen or stage at\r\nthat point in the musical score (“Car crashes into house”, “curtain opens”,\r\n“she slaps his face”, etc.)</p>\n<h3 id=\"ff-20-01-cc-midi-channel-prefix\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ff-20-01-cc-midi-channel-prefix\"><span class=\"icon icon-link\"></span></a>FF 20 01 cc MIDI Channel Prefix</h3>\n<p>The MIDI channel (0-15) contained in this event may be used to associate a\r\nMIDI channel with all events which follow, including System exclusive and\r\nmeta-events. This channel is “effective” until the next normal MIDI event\r\n(which contains a channel) or the next MIDI Channel Prefix meta-event. If\r\nMIDI channels refer to “tracks”, this message may be put into a format 0\r\nfile, keeping their non-MIDI data associated with a track. This capability\r\nis also present in Yamaha’s ESEQ file format.</p>\n<h3 id=\"ff-2f-00-end-of-track\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ff-2f-00-end-of-track\"><span class=\"icon icon-link\"></span></a>FF 2F 00 End of Track</h3>\n<p>This event is not optional. It is included so that an exact ending point may\r\nbe specified for the track, so that an exact length is defined, which is\r\nnecessary for tracks which are looped or concatenated.</p>\n<h3 id=\"ff-51-03-tttttt-set-tempo-in-microseconds-per-midi-quarter-note\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ff-51-03-tttttt-set-tempo-in-microseconds-per-midi-quarter-note\"><span class=\"icon icon-link\"></span></a>FF 51 03 tttttt Set Tempo (in microseconds per MIDI quarter-note)</h3>\n<p>This event indicates a tempo change. Another way of putting “microseconds per\r\nquarter-note” is “24^ths^ of a microsecond per MIDI clock”. Representing\r\ntempos as time per beat instead of beat per time allows absolutely exact\r\nlong-term synchronisation with a time-based sync protocol such as SMPTE time\r\ncode or MIDI time code. The amount of accuracy provided by this tempo\r\nresolution allows a four-minute piece at 120 beats per minute to be accurate\r\nwithin 500 usec<sup><a href=\"#user-content-fn-usec\" id=\"user-content-fnref-usec\" data-footnote-ref aria-describedby=\"footnote-label\">3</a></sup> at the end of the piece. Ideally, these events should only\r\noccur where MIDI clocks would be located – this convention is intended to\r\nguarantee, or at least increase the likelihood, of compatibility with other\r\nsynchronisation devices so that a time signature/tempo map stored in this\r\nformat may easily be transferred to another device.</p>\n<h3 id=\"ff-54-05-hr-mn-se-fr-ff-smpte-offset\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ff-54-05-hr-mn-se-fr-ff-smpte-offset\"><span class=\"icon icon-link\"></span></a>FF 54 05 hr mn se fr ff SMPTE Offset</h3>\n<p>This event, if present, designates the SMPTE time at which the track chunk is\r\nsupposed to start. It should be present at the beginning of the track, that\r\nis, before any nonzero delta-times, and before any transmittable MIDI events.\r\nthe hour must be encoded with the SMPTE format, just as it is in MIDI Time\r\nCode. In a format 1 file, the SMPTE Offset must be stored with the tempo map,\r\nand has no meaning in any of the other tracks. The ff field contains\r\nfractional frames, in 100ths of a frame, even in SMPTE-based tracks which\r\nspecify a different frame subdivision for delta-times.</p>\n<h3 id=\"ff-58-04-nn-dd-cc-bb-time-signature\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ff-58-04-nn-dd-cc-bb-time-signature\"><span class=\"icon icon-link\"></span></a>FF 58 04 nn dd cc bb Time Signature</h3>\n<p>The time signature is expressed as four numbers. nn and dd represent the\r\nnumerator and denominator of the time signature as it would be notated. The\r\ndenominator is a negative power of two: 2 represents a quarter-note, 3\r\nrepresents an eighth-note, etc. The cc parameter expresses the number of MIDI\r\nclocks in a metronome click. The bb parameter expresses the number of notated\r\n32nd-notes in a MIDI quarter-note (24 MIDI clocks). This was added because\r\nthere are already multiple programs which allow a user to specify that what\r\nMIDI thinks of as a quarter-note (24 clocks) is to be notated as, or related\r\nto in terms of, something else.</p>\n<p>Therefore, the complete event for <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mn>6</mn><mn>8</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{6}{8}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1901em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">8</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">6</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span> time, where the metronome\r\nclicks every three eighth-notes, but there are 24 clocks per quarter-note,\r\n72 to the bar, would be (in hex):</p>\n<pre class=\"language-text\"><code class=\"language-text code-highlight\"><span class=\"code-line\">FF 58 04 06 03 24 08\n</span></code></pre>\n<p>That is, <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mn>6</mn><mn>8</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{6}{8}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1901em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">8</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">6</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span> time (8 is 2 to the 3rd power, so this is <code>06 03</code>), 36\r\nMIDI clocks per dotted-quarter (24 hex!), and eight notated 32nd-notes\r\nper quarter-note.</p>\n<h3 id=\"ff-59-02-sf-mi-key-signature\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ff-59-02-sf-mi-key-signature\"><span class=\"icon icon-link\"></span></a>FF 59 02 sf mi Key Signature</h3>\n<pre class=\"language-text\"><code class=\"language-text code-highlight\"><span class=\"code-line\">sf = -7: 7 flats\r\n</span><span class=\"code-line\">sf = -1: 1 flat\r\n</span><span class=\"code-line\">sf = 0: key of C\r\n</span><span class=\"code-line\">sf = 1: 1 sharp\r\n</span><span class=\"code-line\">sf = 7: 7 sharps\r\n</span><span class=\"code-line\">\r\n</span><span class=\"code-line\">mi = 0: major key\r\n</span><span class=\"code-line\">mi = 1: minor key\n</span></code></pre>\n<h3 id=\"ff-7f-len-data-sequencer-specific-meta-event\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#ff-7f-len-data-sequencer-specific-meta-event\"><span class=\"icon icon-link\"></span></a>FF 7F len data Sequencer Specific Meta-Event</h3>\n<p>Special requirements for particular sequencers may use this event type: the\r\nfirst byte or bytes of data is a manufacturer ID (these are one byte, or if\r\nthe first byte is 00, three bytes). As with MIDI System Exclusive,\r\nmanufacturers who define something using this meta-event should publish it so\r\nthat others may be used by a sequencer which elects to use this as its only\r\nfile format; sequencers with their established feature-specific formats\r\nshould probably stick to the standard features when using this format.</p>\n<p>See Appendix 2 - [Program Fragments and Example MIDI Files]</p>\n<!--\\\\ \\pagebreak \\\\-->\n<h1 id=\"appendix\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#appendix\"><span class=\"icon icon-link\"></span></a>Appendix</h1>\n<h2 id=\"midi-messages\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#midi-messages\"><span class=\"icon icon-link\"></span></a>MIDI Messages</h2>\n<p>A MIDI message is made up of an eight-bit status byte which is generally\r\nfollowed by one or two data bytes.  There are a number of different types of\r\nMIDI messages. At the highest level, MIDI messages are classified as being\r\neither Channel Messages or System Messages. Channel messages are those which\r\napply to a specific Channel, and the Channel number is included in the status\r\nbyte for these messages. System messages are not Channel specific, and no\r\nChannel number is indicated in their status bytes.</p>\n<p>Channel Messages may be further classified as being either Channel Voice\r\nMessages, or Mode Messages.  Channel Voice Messages carry musical performance\r\ndata, and these messages comprise most of the traffic in a typical MIDI data\r\nstream. Channel Mode messages affect the way a receiving instrument will\r\nrespond to the Channel Voice messages.</p>\n<p>MIDI System Messages are classified as being System Common Messages, System\r\nReal Time Messages, or System Exclusive Messages. System Common messages are\r\nintended for all receivers in the system. System Real Time messages are used\r\nfor synchronisation between clock-based MIDI components. System Exclusive\r\nmessages include a Manufacturer’s Identification (ID) code, and are used to\r\ntransfer any number of data bytes in a format specified by the referenced\r\nmanufacturer.</p>\n<p><img src=\"/images/smfio/midi-msg-type.png\" alt=\"MIDI Message Type (Flow-Chart)\"></p>\n<!--\\\\ \\pagebreak \\\\-->\n<h3 id=\"table-of-major-midi-messages\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#table-of-major-midi-messages\"><span class=\"icon icon-link\"></span></a>Table of Major MIDI Messages</h3>\n<h4 id=\"channel-voice-messages\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#channel-voice-messages\"><span class=\"icon icon-link\"></span></a>Channel Voice Messages</h4>\n<table>\n<thead>\n<tr>\n<th>bin stat</th>\n<th>data <code>D7-D0</code> stat</th>\n<th>hex</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>1000nnnn</code></td>\n<td><code>0kkkkkkk</code> <code>0vvvvvvv</code></td>\n<td><code>0x8n</code></td>\n<td><strong>Note Off</strong> event.<br/>This message is sent when a note is released (ended).<br/><code>kkkkkkk</code> is the key (note) number.<br/><code>vvvvvvv</code> is the velocity.</td>\n</tr>\n<tr>\n<td><code>1001nnnn</code></td>\n<td><code>0kkkkkkk</code> <code>0vvvvvvv</code></td>\n<td><code>0x9n</code></td>\n<td><strong>Note On</strong> event.<br/>This message is sent when a note is depressed (start).<br/><code>kkkkkkk</code> is the key (note) number.<br/><code>vvvvvvv</code> is the velocity.</td>\n</tr>\n<tr>\n<td><code>1010nnnn</code></td>\n<td><code>0kkkkkkk</code> <code>0vvvvvvv</code></td>\n<td><code>0xAn</code></td>\n<td><strong>Polyphonic Key Pressure (Aftertouch)</strong>.<br/>This message is sent when a note is depressed (start).<br/><code>kkkkkkk</code> is the key (note) number.<br/><code>vvvvvvv</code> is the velocity.</td>\n</tr>\n<tr>\n<td><code>1011nnnn</code></td>\n<td><code>0kkkkkkk</code> <code>0vvvvvvv</code></td>\n<td><code>0xBn</code></td>\n<td><strong>Control Change</strong>.<br/>This message is sent when a controller value changes. Controllers include devices such as pedals and levers.<br/>Certain controller numbers are reserved for specific purposes.<br/>See [Channel Mode Messages].<br/><code>ccccccc</code> is the controller number.<br/><code>vvvvvvv</code> is the new value.</td>\n</tr>\n<tr>\n<td><code>1100nnnn</code></td>\n<td><code>0ppppppp</code></td>\n<td><code>0xCn</code></td>\n<td><strong>Program Change</strong>.<br/>This message sent when the patch number changes.<br/><code>ppppppp</code> is the new program number.</td>\n</tr>\n<tr>\n<td><code>1101nnnn</code></td>\n<td><code>0vvvvvvv</code></td>\n<td><code>0xDn</code></td>\n<td><strong>Channel Pressure (After-touch)</strong>.<br/>This message is most often sent by pressing down on the key after it “bottoms out”. This message is different from polyphonic after-touch.<br/>Use this message to send the single greatest pressure value (of all the current depressed keys).<br/><code>vvvvvvv</code> is the pressure value.</td>\n</tr>\n<tr>\n<td><code>1110nnnn</code></td>\n<td><code>0lllllll</code></td>\n<td><code>0xEn</code></td>\n<td><strong>Pitch Wheel Change</strong>.<br/><code>0mmmmmmm</code> This message is sent to indicate a change in the pitch wheel.<br/>The pitch wheel is measured by a fourteen bit value. Centre (no pitch change) is 2000H.<br/>Sensitivity is a function of the transmitter.<br/><code>lllllll</code> are the least significant 7 bits.<br/><code>mmmmmmm</code> are the most significant 7 bits.</td>\n</tr>\n</tbody>\n</table>\n<p>Table:  Channel Voice Messages</p>\n<!--\\\\ \\pagebreak \\\\-->\n<h4 id=\"channel-mode-messages\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#channel-mode-messages\"><span class=\"icon icon-link\"></span></a>Channel Mode Messages</h4>\n<blockquote>\n<p>(See also Control Change, above)</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>byte status</th>\n<th>data bytes 7-0</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>1011nnnn</code></td>\n<td><code>0ccccccc</code></td>\n<td><strong>Channel Mode Messages</strong>.<br/><code>0vvvvvvv</code>     This the same code as the Control Change (above), but implements Mode control by using reserved controller numbers.<br/>The numbers are: <strong>Local Control</strong>.<br/>When Local Control is <code>Off</code>, all devices on a given channel will respond only to data received over MIDI. Played data, etc. will be ignored.<br/>Local Control <code>On</code> restores the functions of the normal controllers.<br/><code>c = 122, v = 0</code>: <strong>Local Control Off</strong><br/><code>c = 122, v = 127</code>: <strong>Local Control On</strong><br/><br/>All Notes Off.<br/>When an All Notes Off is received all oscillators will turn off.<br/><code>c = 123, v = 0</code>: <strong>All Notes Off</strong><br/><br/><code>c = 124, v = 0</code>: <strong>Omni Mode Off</strong><br/><code>c = 125, v = 0</code>: <strong>Omni Mode On</strong><br/><code>c = 126, v = M</code>: <strong>Mono Mode On</strong> (Poly Off) where M is the number of channels (Omni Off) or 0 (Omni On)<br/><code>c = 127, v = 0</code>: <strong>Poly Mode On</strong> (Mono Off)<br/>(Note: These four messages also cause All Notes Off)</td>\n</tr>\n</tbody>\n</table>\n<p>Table:  Channel Mode Messages</p>\n<!--\\\\ \\pagebreak \\\\-->\n<h4 id=\"system-common-messages\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#system-common-messages\"><span class=\"icon icon-link\"></span></a>System Common Messages</h4>\n<table>\n<thead>\n<tr>\n<th>byte status</th>\n<th>data bytes</th>\n<th><code>D7-D0</code></th>\n<th>hex status</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>11110000</code></td>\n<td><code>0iiiiiii</code></td>\n<td><code>..</code> <code>..</code> <code>0ddddddd</code> <code>11110111</code></td>\n<td><code>0xF0</code></td>\n<td><strong>System Exclusive</strong>.<br/><code>0ddddddd</code><br/>This message makes up for all that MIDI doesn’t support. <code>iiiiiii</code> is usually a seven-bit Manufacturer’s I.D. code. If the synthesiser  recognises the I.D. code as its own, it will listen to the rest of the message <code>ddddddd</code>. Otherwise, the message will be ignored. System Exclusive is used to send bulk dumps such as patch parameters and other non-spec data. (Note: Real-Time messages ONLY may be interleaved with a System Exclusive.) This message also is used for extensions called <strong>Universal Exclusive Messages</strong>.</td>\n</tr>\n<tr>\n<td><code>11110001</code></td>\n<td></td>\n<td></td>\n<td><code>0xF1</code></td>\n<td>Undefined.</td>\n</tr>\n<tr>\n<td><code>11110010</code></td>\n<td><code>0lllllll</code></td>\n<td><code>0mmmmmmm</code></td>\n<td><code>0xF2</code></td>\n<td><strong>Song Position Pointer</strong>. This is an internal 14 bit register that holds the number of MIDI beats (1 beat=six MIDI clocks) since the start of the song. l is the LSB, m the MSB.</td>\n</tr>\n<tr>\n<td><code>11110011</code></td>\n<td><code>0sssssss</code></td>\n<td></td>\n<td><code>0xF3</code></td>\n<td><strong>Song Select</strong>.<br/>The Song Select specifies which sequence or song is to be played.</td>\n</tr>\n<tr>\n<td><code>11110100</code></td>\n<td></td>\n<td></td>\n<td><code>0xF4</code></td>\n<td>Undefined.</td>\n</tr>\n<tr>\n<td><code>11110101</code></td>\n<td></td>\n<td></td>\n<td><code>0xF5</code></td>\n<td>Undefined.</td>\n</tr>\n<tr>\n<td><code>11110110</code></td>\n<td></td>\n<td></td>\n<td><code>0xF6</code></td>\n<td><strong>Tune Request</strong>.<br/>Upon receiving a Tune Request, all analog synthesisers should tune their oscillators.</td>\n</tr>\n<tr>\n<td><code>11110111</code></td>\n<td></td>\n<td></td>\n<td><code>0xF7</code></td>\n<td><strong>End of Exclusive</strong>.<br/>Used to terminate a System Exclusive dump (see above).</td>\n</tr>\n</tbody>\n</table>\n<p>Table: System Common Messages</p>\n<!--\\\\ \\pagebreak \\\\-->\n<h4 id=\"system-realtime-messages\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#system-realtime-messages\"><span class=\"icon icon-link\"></span></a>System Realtime Messages</h4>\n<table>\n<thead>\n<tr>\n<th>byte status</th>\n<th>data bytes <code>D7-D0</code></th>\n<th>hex status</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>11111000</code></td>\n<td></td>\n<td><code>0xF8</code></td>\n<td><strong>Timing Clock</strong>.<br/>Sent 24 times per quarter note when<br/>synchronisation is required.</td>\n</tr>\n<tr>\n<td><code>11111001</code></td>\n<td></td>\n<td><code>0xF9</code></td>\n<td>Undefined.</td>\n</tr>\n<tr>\n<td><code>11111010</code></td>\n<td></td>\n<td><code>0xFA</code></td>\n<td><strong>Start</strong>.<br/>Start the current sequence playing. (This message will be followed with Timing Clocks).</td>\n</tr>\n<tr>\n<td><code>11111011</code></td>\n<td></td>\n<td><code>0xFB</code></td>\n<td><strong>Continue</strong>.<br/>Continue at the point the sequence was Stopped.</td>\n</tr>\n<tr>\n<td><code>11111100</code></td>\n<td></td>\n<td><code>0xFC</code></td>\n<td><strong>Stop</strong>.<br/>Stop the current sequence.</td>\n</tr>\n<tr>\n<td><code>11111101</code></td>\n<td></td>\n<td><code>0xFD</code></td>\n<td>Undefined.</td>\n</tr>\n<tr>\n<td><code>11111110</code></td>\n<td></td>\n<td><code>0xFE</code></td>\n<td><strong>Active Sensing</strong>.<br/>Use of this message is optional. When initially sent, the receiver will expect to receive another Active Sensing message each 300ms (max), or it will be assume that the connection has been terminated. At termination, the receiver will turn off all voices and return to normal (non-active sensing) operation.</td>\n</tr>\n<tr>\n<td><code>11111111</code></td>\n<td></td>\n<td><code>0xFF</code></td>\n<td><strong>Reset</strong><br/>Reset all receivers in the system to power-up status. This should be used sparingly, preferably under manual control. In particular, it should not be sent on power-up.<br/>In a MIDI file this is used as an escape to introduce <code>&#x3C;meta events></code>.</td>\n</tr>\n</tbody>\n</table>\n<p>Table: System Realtime Messages</p>\n<!--\\\\ \\pagebreak \\\\-->\n<h3 id=\"table-of-midi-controller-messages\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#table-of-midi-controller-messages\"><span class=\"icon icon-link\"></span></a>Table of MIDI Controller Messages</h3>\n<!-- ------------------------------------------------------------------------------ -->\n<!-- 2nd Byte Value    Function                                        3rd Byte -->\n<p>[2nd byte {bin,hex,dec}, function, 3rd byte {Value,Use}]</p>\n<table>\n<thead>\n<tr>\n<th>bin</th>\n<th>hex</th>\n<th>dec</th>\n<th>Function</th>\n<th>Value</th>\n<th>Use</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>00000000</code></td>\n<td><code>00</code></td>\n<td><code>0</code></td>\n<td>Bank Select (MSB:0, LSB:32) <strong>GM2</strong></td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00000001</code></td>\n<td><code>01</code></td>\n<td><code>1</code></td>\n<td>* Modulation wheel (Depth) <strong>GM2</strong></td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00000010</code></td>\n<td><code>02</code></td>\n<td><code>2</code></td>\n<td>Breath control</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00000011</code></td>\n<td><code>03</code></td>\n<td><code>3</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00000100</code></td>\n<td><code>04</code></td>\n<td><code>4</code></td>\n<td>Foot controller</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00000101</code></td>\n<td><code>05</code></td>\n<td><code>5</code></td>\n<td>Portamento time      <strong>GM2</strong></td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00000110</code></td>\n<td><code>06</code></td>\n<td><code>6</code></td>\n<td>Data Entry      <strong>GM2</strong></td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00000111</code></td>\n<td><code>07</code></td>\n<td><code>7</code></td>\n<td>* Channel Volume (GM1 Main Volume)  <strong>GM2</strong></td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00001000</code></td>\n<td><code>08</code></td>\n<td><code>8</code></td>\n<td>Balance</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00001001</code></td>\n<td><code>09</code></td>\n<td><code>9</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00001010</code></td>\n<td><code>0A</code></td>\n<td><code>10</code></td>\n<td>* Pan                       <strong>GM2</strong></td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00001011</code></td>\n<td><code>0B</code></td>\n<td><code>11</code></td>\n<td>* Expression Controller     <strong>GM2</strong></td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00001100</code></td>\n<td><code>0C</code></td>\n<td><code>12</code></td>\n<td>Effect control 1</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00001101</code></td>\n<td><code>0D</code></td>\n<td><code>13</code></td>\n<td>Effect control 2</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00001110</code></td>\n<td><code>0E</code></td>\n<td><code>14</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00001111</code></td>\n<td><code>0F</code></td>\n<td><code>15</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00010000</code></td>\n<td><code>10</code></td>\n<td><code>16</code></td>\n<td>General Purpose Controller #1</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00010001</code></td>\n<td><code>11</code></td>\n<td><code>17</code></td>\n<td>General Purpose Controller #2</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00010010</code></td>\n<td><code>12</code></td>\n<td><code>18</code></td>\n<td>General Purpose Controller #3</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00010011</code></td>\n<td><code>13</code></td>\n<td><code>19</code></td>\n<td>General Purpose Controller #4</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00010100</code></td>\n<td><code>14</code></td>\n<td><code>20</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00010101</code></td>\n<td><code>15</code></td>\n<td><code>21</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00010110</code></td>\n<td><code>16</code></td>\n<td><code>22</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00010111</code></td>\n<td><code>17</code></td>\n<td><code>23</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00011000</code></td>\n<td><code>18</code></td>\n<td><code>24</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00011001</code></td>\n<td><code>19</code></td>\n<td><code>25</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00011010</code></td>\n<td><code>1A</code></td>\n<td><code>26</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00011011</code></td>\n<td><code>1B</code></td>\n<td><code>27</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00011100</code></td>\n<td><code>1C</code></td>\n<td><code>28</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00011101</code></td>\n<td><code>1D</code></td>\n<td><code>29</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00011110</code></td>\n<td><code>1E</code></td>\n<td><code>30</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00011111</code></td>\n<td><code>1F</code></td>\n<td><code>31</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>00100000</code></td>\n<td><code>20</code></td>\n<td><code>32</code></td>\n<td>Bank Select</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00100001</code></td>\n<td><code>21</code></td>\n<td><code>33</code></td>\n<td>Modulation wheel</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00100010</code></td>\n<td><code>22</code></td>\n<td><code>34</code></td>\n<td>Breath control</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00100011</code></td>\n<td><code>23</code></td>\n<td><code>35</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00100100</code></td>\n<td><code>24</code></td>\n<td><code>36</code></td>\n<td>Foot controller</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00100101</code></td>\n<td><code>25</code></td>\n<td><code>37</code></td>\n<td>Portamento time</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00100110</code></td>\n<td><code>26</code></td>\n<td><code>38</code></td>\n<td>Data entry <strong>GM2</strong></td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00100111</code></td>\n<td><code>27</code></td>\n<td><code>39</code></td>\n<td>Channel Volume (formerly Main Volume)</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00101000</code></td>\n<td><code>28</code></td>\n<td><code>40</code></td>\n<td>Balance</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00101001</code></td>\n<td><code>29</code></td>\n<td><code>41</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00101010</code></td>\n<td><code>2A</code></td>\n<td><code>42</code></td>\n<td>Pan</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00101011</code></td>\n<td><code>2B</code></td>\n<td><code>43</code></td>\n<td>Expression Controller</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00101100</code></td>\n<td><code>2C</code></td>\n<td><code>44</code></td>\n<td>Effect control 1</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00101101</code></td>\n<td><code>2D</code></td>\n<td><code>45</code></td>\n<td>Effect control 2</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00101110</code></td>\n<td><code>2E</code></td>\n<td><code>46</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00101111</code></td>\n<td><code>2F</code></td>\n<td><code>47</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00110000</code></td>\n<td><code>30</code></td>\n<td><code>48</code></td>\n<td>General Purpose Controller #1</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00110001</code></td>\n<td><code>31</code></td>\n<td><code>49</code></td>\n<td>General Purpose Controller #2</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00110010</code></td>\n<td><code>32</code></td>\n<td><code>50</code></td>\n<td>General Purpose Controller #3</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00110011</code></td>\n<td><code>33</code></td>\n<td><code>51</code></td>\n<td>General Purpose Controller #4</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00110100</code></td>\n<td><code>34</code></td>\n<td><code>52</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00110101</code></td>\n<td><code>35</code></td>\n<td><code>53</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00110110</code></td>\n<td><code>36</code></td>\n<td><code>54</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00110111</code></td>\n<td><code>37</code></td>\n<td><code>55</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00111000</code></td>\n<td><code>38</code></td>\n<td><code>56</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00111001</code></td>\n<td><code>39</code></td>\n<td><code>57</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00111010</code></td>\n<td><code>3A</code></td>\n<td><code>58</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00111011</code></td>\n<td><code>3B</code></td>\n<td><code>59</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00111100</code></td>\n<td><code>3C</code></td>\n<td><code>60</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00111101</code></td>\n<td><code>3D</code></td>\n<td><code>61</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00111110</code></td>\n<td><code>3E</code></td>\n<td><code>62</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>00111111</code></td>\n<td><code>3F</code></td>\n<td><code>63</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01000000</code></td>\n<td><code>40</code></td>\n<td><code>64</code></td>\n<td>* Damper pedal on/off (Sustain) <strong>GM2</strong></td>\n<td>&#x3C;<code>63</code>=off\\</td>\n<td>>64=on</td>\n</tr>\n<tr>\n<td><code>01000001</code></td>\n<td><code>41</code></td>\n<td><code>65</code></td>\n<td>Portamento on/off   <strong>GM2</strong></td>\n<td>&#x3C;<code>63</code>=off\\</td>\n<td>>64=on</td>\n</tr>\n<tr>\n<td><code>01000010</code></td>\n<td><code>42</code></td>\n<td><code>66</code></td>\n<td>Sustenuto on/off    <strong>GM2</strong></td>\n<td>&#x3C;<code>63</code>=off\\</td>\n<td>>64=on</td>\n</tr>\n<tr>\n<td><code>01000011</code></td>\n<td><code>43</code></td>\n<td><code>67</code></td>\n<td>Soft pedal on/off   <strong>GM2</strong></td>\n<td>&#x3C;<code>63</code>=off\\</td>\n<td>>64=on</td>\n</tr>\n<tr>\n<td><code>01000100</code></td>\n<td><code>44</code></td>\n<td><code>68</code></td>\n<td>Legato Footswitch</td>\n<td>&#x3C;<code>63</code>=off\\</td>\n<td>>64=on</td>\n</tr>\n<tr>\n<td><code>01000101</code></td>\n<td><code>45</code></td>\n<td><code>69</code></td>\n<td>Hold 2</td>\n<td>&#x3C;<code>63</code>=off\\</td>\n<td>>64=on</td>\n</tr>\n<tr>\n<td><code>01000110</code></td>\n<td><code>46</code></td>\n<td><code>70</code></td>\n<td>Sound Controller 1 (Sound Variation)</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01000111</code></td>\n<td><code>47</code></td>\n<td><code>71</code></td>\n<td>Sound Controller 2 (Timbre <strong>GM2</strong> Resonance)</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01001000</code></td>\n<td><code>48</code></td>\n<td><code>72</code></td>\n<td>Sound Controller 3 (<strong>GM2</strong> Release Time)</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01001001</code></td>\n<td><code>49</code></td>\n<td><code>73</code></td>\n<td>Sound Controller 4 (<strong>GM2</strong> Attack Time)</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01001010</code></td>\n<td><code>4A</code></td>\n<td><code>74</code></td>\n<td>Sound Controller 5 (<strong>GM2</strong> Brightness)</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01001011</code></td>\n<td><code>4B</code></td>\n<td><code>75</code></td>\n<td>Sound Controller 6 (<strong>GM2</strong> Decay)</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01001100</code></td>\n<td><code>4C</code></td>\n<td><code>76</code></td>\n<td>Sound Controller 7 (<strong>GM2</strong> Vibrato Rate)</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01001101</code></td>\n<td><code>4D</code></td>\n<td><code>77</code></td>\n<td>Sound Controller 8 (<strong>GM2</strong> Vibrato Depth)</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01001110</code></td>\n<td><code>4E</code></td>\n<td><code>78</code></td>\n<td>Sound Controller 9 (<strong>GM2</strong> Vibrato Delay)</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01001111</code></td>\n<td><code>4F</code></td>\n<td><code>79</code></td>\n<td>Sound Controller 10</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01010000</code></td>\n<td><code>50</code></td>\n<td><code>80</code></td>\n<td>General Purpose Controller #5</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01010001</code></td>\n<td><code>51</code></td>\n<td><code>81</code></td>\n<td>General Purpose Controller #6</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01010010</code></td>\n<td><code>52</code></td>\n<td><code>82</code></td>\n<td>General Purpose Controller #7</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01010011</code></td>\n<td><code>53</code></td>\n<td><code>83</code></td>\n<td>General Purpose Controller #8</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01010100</code></td>\n<td><code>54</code></td>\n<td><code>84</code></td>\n<td>Portamento Control</td>\n<td><code>0-127</code></td>\n<td>Source Note</td>\n</tr>\n<tr>\n<td><code>01010101</code></td>\n<td><code>55</code></td>\n<td><code>85</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01010110</code></td>\n<td><code>56</code></td>\n<td><code>86</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01010111</code></td>\n<td><code>57</code></td>\n<td><code>87</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01011000</code></td>\n<td><code>58</code></td>\n<td><code>88</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01011001</code></td>\n<td><code>59</code></td>\n<td><code>89</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01011010</code></td>\n<td><code>5A</code></td>\n<td><code>90</code></td>\n<td>Undefined</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01011011</code></td>\n<td><code>5B</code></td>\n<td><code>91</code></td>\n<td>Effects 1 Depth (<strong>GM2</strong> Reverb Send Level)</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01011100</code></td>\n<td><code>5C</code></td>\n<td><code>92</code></td>\n<td>Effects 2 Depth</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01011101</code></td>\n<td><code>5D</code></td>\n<td><code>93</code></td>\n<td>Effects 3 Depth (<strong>GM2</strong> Chorus Send Level)</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01011110</code></td>\n<td><code>5E</code></td>\n<td><code>94</code></td>\n<td>Effects 4 Depth</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01011111</code></td>\n<td><code>5F</code></td>\n<td><code>95</code></td>\n<td>Effects 5 Depth</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01100000</code></td>\n<td><code>60</code></td>\n<td><code>96</code></td>\n<td>Data entry</td>\n<td><code>+1</code></td>\n<td>N/A</td>\n</tr>\n<tr>\n<td><code>01100001</code></td>\n<td><code>61</code></td>\n<td><code>97</code></td>\n<td>Data entry</td>\n<td><code>-1</code></td>\n<td>N/A</td>\n</tr>\n<tr>\n<td><code>01100010</code></td>\n<td><code>62</code></td>\n<td><code>98</code></td>\n<td>Non-Registered Parameter Number LSB</td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01100011</code></td>\n<td><code>63</code></td>\n<td><code>99</code></td>\n<td>Non-Registered Parameter Number MSB</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>01100100</code></td>\n<td><code>64</code></td>\n<td><code>100</code></td>\n<td>* Registered Parameter Number LSB <strong>GM2</strong></td>\n<td><code>0-127</code></td>\n<td>LSB</td>\n</tr>\n<tr>\n<td><code>01100101</code></td>\n<td><code>65</code></td>\n<td><code>101</code></td>\n<td>* Registered Parameter Number MSB</td>\n<td><code>0-127</code></td>\n<td>MSB</td>\n</tr>\n<tr>\n<td><code>01100111</code></td>\n<td><code>67</code></td>\n<td><code>103</code></td>\n<td>Undefined</td>\n<td>?</td>\n<td></td>\n</tr>\n<tr>\n<td><code>01101000</code></td>\n<td><code>68</code></td>\n<td><code>104</code></td>\n<td>Undefined</td>\n<td>?</td>\n<td></td>\n</tr>\n<tr>\n<td><code>01101001</code></td>\n<td><code>69</code></td>\n<td><code>105</code></td>\n<td>Undefined</td>\n<td>?</td>\n<td></td>\n</tr>\n<tr>\n<td><code>01101010</code></td>\n<td><code>6A</code></td>\n<td><code>106</code></td>\n<td>Undefined</td>\n<td>?</td>\n<td></td>\n</tr>\n<tr>\n<td><code>01101011</code></td>\n<td><code>6B</code></td>\n<td><code>107</code></td>\n<td>Undefined</td>\n<td>?</td>\n<td></td>\n</tr>\n<tr>\n<td><code>01101100</code></td>\n<td><code>6C</code></td>\n<td><code>108</code></td>\n<td>Undefined</td>\n<td>?</td>\n<td></td>\n</tr>\n<tr>\n<td><code>01101101</code></td>\n<td><code>6D</code></td>\n<td><code>109</code></td>\n<td>Undefined</td>\n<td>?</td>\n<td></td>\n</tr>\n<tr>\n<td><code>01101110</code></td>\n<td><code>6E</code></td>\n<td><code>110</code></td>\n<td>Undefined</td>\n<td>?</td>\n<td></td>\n</tr>\n<tr>\n<td><code>01101111</code></td>\n<td><code>6F</code></td>\n<td><code>111</code></td>\n<td>Undefined</td>\n<td>?</td>\n<td></td>\n</tr>\n<tr>\n<td><code>01110000</code></td>\n<td><code>70</code></td>\n<td><code>112</code></td>\n<td>Undefined</td>\n<td>?</td>\n<td></td>\n</tr>\n<tr>\n<td><code>01110001</code></td>\n<td><code>71</code></td>\n<td><code>113</code></td>\n<td>Undefined</td>\n<td>?</td>\n<td></td>\n</tr>\n<tr>\n<td><code>01110010</code></td>\n<td><code>72</code></td>\n<td><code>114</code></td>\n<td>Undefined</td>\n<td>?</td>\n<td></td>\n</tr>\n<tr>\n<td><code>01110011</code></td>\n<td><code>73</code></td>\n<td><code>115</code></td>\n<td>Undefined</td>\n<td>?</td>\n<td></td>\n</tr>\n<tr>\n<td><code>01110100</code></td>\n<td><code>74</code></td>\n<td><code>116</code></td>\n<td>Undefined</td>\n<td>?</td>\n<td></td>\n</tr>\n<tr>\n<td><code>01110101</code></td>\n<td><code>75</code></td>\n<td><code>117</code></td>\n<td>Undefined</td>\n<td>?</td>\n<td></td>\n</tr>\n<tr>\n<td><code>01110110</code></td>\n<td><code>76</code></td>\n<td><code>118</code></td>\n<td>Undefined</td>\n<td>?</td>\n<td></td>\n</tr>\n<tr>\n<td><code>01110111</code></td>\n<td><code>77</code></td>\n<td><code>119</code></td>\n<td>Undefined</td>\n<td>?</td>\n<td></td>\n</tr>\n<tr>\n<td><code>01111000</code></td>\n<td><code>78</code></td>\n<td><code>120</code></td>\n<td>All Sound Off</td>\n<td><code>0</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>01111001</code></td>\n<td><code>79</code></td>\n<td><code>121</code></td>\n<td>* Reset All Controllers</td>\n<td><code>0</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>01111010</code></td>\n<td><code>7A</code></td>\n<td><code>122</code></td>\n<td>Local control on/off</td>\n<td><code>0</code>=off  <code>127</code>=on</td>\n<td></td>\n</tr>\n<tr>\n<td><code>01111011</code></td>\n<td><code>7B</code></td>\n<td><code>123</code></td>\n<td>* All notes off</td>\n<td><code>0</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>01111100</code></td>\n<td><code>7C</code></td>\n<td><code>124</code></td>\n<td>Omni mode off (+ all notes off)</td>\n<td><code>0</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>01111101</code></td>\n<td><code>7D</code></td>\n<td><code>125</code></td>\n<td>Omni mode on (+ all notes off)</td>\n<td><code>0</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>01111110</code></td>\n<td><code>7E</code></td>\n<td><code>126</code></td>\n<td>Poly mode on/off (+ all notes off)</td>\n<td>/<em>/</em></td>\n<td></td>\n</tr>\n<tr>\n<td><code>01111111</code></td>\n<td><code>7F</code></td>\n<td><code>127</code></td>\n<td>Poly mode on (incl mono=off +all notes off)</td>\n<td><code>0</code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>Table| Table of MIDI Controller Messages</p>\n<p>* Equipment must respond in order to comply with General MIDI level 1.<br/>** This equals the number of channels, or zero if the number of channels\r\nequals the number of voices in the</p>\n<!--\\\\ \\pagebreak \\\\-->\n<h3 id=\"table-of-midi-note-numbers\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#table-of-midi-note-numbers\"><span class=\"icon icon-link\"></span></a>Table of MIDI Note Numbers</h3>\n<p>This table lists all MIDI Note Numbers by octave.</p>\n<p><em>The absolute octave number designations are based on Middle C = C4, which is\r\nan arbitrary but widely used assignment.</em></p>\n<table>\n<thead>\n<tr>\n<th>Octave</th>\n<th>C</th>\n<th>C</th>\n<th>D</th>\n<th>D#</th>\n<th>E</th>\n<th>F</th>\n<th>F#</th>\n<th>G</th>\n<th>G#</th>\n<th>A</th>\n<th>A#</th>\n<th>B</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-1</td>\n<td>0</td>\n<td>1</td>\n<td>2</td>\n<td>3</td>\n<td>4</td>\n<td>5</td>\n<td>6</td>\n<td>7</td>\n<td>8</td>\n<td>9</td>\n<td>10</td>\n<td>11</td>\n</tr>\n<tr>\n<td>0</td>\n<td>12</td>\n<td>13</td>\n<td>14</td>\n<td>15</td>\n<td>16</td>\n<td>17</td>\n<td>18</td>\n<td>19</td>\n<td>20</td>\n<td>21</td>\n<td>22</td>\n<td>23</td>\n</tr>\n<tr>\n<td>1</td>\n<td>24</td>\n<td>25</td>\n<td>26</td>\n<td>27</td>\n<td>28</td>\n<td>29</td>\n<td>30</td>\n<td>31</td>\n<td>32</td>\n<td>33</td>\n<td>34</td>\n<td>35</td>\n</tr>\n<tr>\n<td>2</td>\n<td>36</td>\n<td>37</td>\n<td>38</td>\n<td>39</td>\n<td>40</td>\n<td>41</td>\n<td>42</td>\n<td>43</td>\n<td>44</td>\n<td>45</td>\n<td>46</td>\n<td>47</td>\n</tr>\n<tr>\n<td>3</td>\n<td>48</td>\n<td>49</td>\n<td>50</td>\n<td>51</td>\n<td>52</td>\n<td>53</td>\n<td>54</td>\n<td>55</td>\n<td>56</td>\n<td>57</td>\n<td>58</td>\n<td>59</td>\n</tr>\n<tr>\n<td>4</td>\n<td>60</td>\n<td>61</td>\n<td>62</td>\n<td>63</td>\n<td>64</td>\n<td>65</td>\n<td>66</td>\n<td>67</td>\n<td>68</td>\n<td>69</td>\n<td>70</td>\n<td>71</td>\n</tr>\n<tr>\n<td>5</td>\n<td>72</td>\n<td>73</td>\n<td>74</td>\n<td>75</td>\n<td>76</td>\n<td>77</td>\n<td>78</td>\n<td>79</td>\n<td>80</td>\n<td>81</td>\n<td>82</td>\n<td>83</td>\n</tr>\n<tr>\n<td>6</td>\n<td>84</td>\n<td>85</td>\n<td>86</td>\n<td>87</td>\n<td>88</td>\n<td>89</td>\n<td>90</td>\n<td>91</td>\n<td>92</td>\n<td>93</td>\n<td>94</td>\n<td>95</td>\n</tr>\n<tr>\n<td>7</td>\n<td>96</td>\n<td>97</td>\n<td>98</td>\n<td>99</td>\n<td>100</td>\n<td>101</td>\n<td>102</td>\n<td>103</td>\n<td>104</td>\n<td>105</td>\n<td>106</td>\n<td>107</td>\n</tr>\n<tr>\n<td>8</td>\n<td>108</td>\n<td>109</td>\n<td>110</td>\n<td>111</td>\n<td>112</td>\n<td>113</td>\n<td>114</td>\n<td>115</td>\n<td>116</td>\n<td>117</td>\n<td>118</td>\n<td>119</td>\n</tr>\n<tr>\n<td>9</td>\n<td>120</td>\n<td>121</td>\n<td>122</td>\n<td>123</td>\n<td>124</td>\n<td>125</td>\n<td>126</td>\n<td>127</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>Table: MIDI Note Numbers</p>\n<!--\\\\ \\pagebreak \\\\-->\n<h3 id=\"general-midi-instrument-patch-map\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#general-midi-instrument-patch-map\"><span class=\"icon icon-link\"></span></a>General MIDI Instrument Patch Map</h3>\n<ul>\n<li>These sounds are the same for all MIDI Channels except Channel 10, which has\r\nonly percussion sounds and some sound “effects”. (See Appendix 1.5 -\r\n[General MIDI Percussion Key Map])</li>\n<li>The names of the instruments indicate what sort of sound will be heard when\r\nthat instrument number (MIDI Program Change or “PC#”) is selected on the GM\r\nsynthesizer.</li>\n</ul>\n<h4 id=\"gm-instrument-families\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#gm-instrument-families\"><span class=\"icon icon-link\"></span></a>GM Instrument Families</h4>\n<p>The General MIDI instrument sounds are grouped by families. In each family are\r\n8 specific instruments.</p>\n<table>\n<thead>\n<tr>\n<th>PC#</th>\n<th>Family</th>\n<th>PC#</th>\n<th>Family</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1-8</td>\n<td>Piano</td>\n<td>65-72</td>\n<td>Reed</td>\n</tr>\n<tr>\n<td>9-16</td>\n<td>Chromatic Percussion</td>\n<td>73-80</td>\n<td>Pipe</td>\n</tr>\n<tr>\n<td>17-24</td>\n<td>Organ</td>\n<td>81-88</td>\n<td>Synth Lead</td>\n</tr>\n<tr>\n<td>25-32</td>\n<td>Guitar</td>\n<td>89-96</td>\n<td>Synth Pad</td>\n</tr>\n<tr>\n<td>33-40</td>\n<td>Bass</td>\n<td>97-104</td>\n<td>Synth Effects</td>\n</tr>\n<tr>\n<td>41-48</td>\n<td>Strings</td>\n<td>95-112</td>\n<td>Ethnic</td>\n</tr>\n<tr>\n<td>49-56</td>\n<td>Ensemble</td>\n<td>113-120</td>\n<td>Percussive</td>\n</tr>\n<tr>\n<td>57-64</td>\n<td>Brass</td>\n<td>120-128</td>\n<td>Sound Effects</td>\n</tr>\n</tbody>\n</table>\n<p>Table: GM Instrument Families</p>\n<!--\\\\ \\pagebreak \\\\-->\n<h4 id=\"gm-instrument-patch-map\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#gm-instrument-patch-map\"><span class=\"icon icon-link\"></span></a>GM Instrument Patch Map</h4>\n<blockquote>\n<p>Note: While GM does not define the actual characteristics of any sounds,\r\nthe names in parentheses after each of the synth leads, pads, and sound\r\neffects are, in particular, intended only as guides.</p>\n</blockquote>\n<blockquote>\n<p>Also Note: Numbers as defined here are -= 1 in their binary form (one\r\nless than the value shown in the table).</p>\n</blockquote>\n<pre class=\"language-text\"><code class=\"language-text code-highlight\"><span class=\"code-line\"> 1.  Acoustic Grand Piano                65. Soprano Sax\r\n</span><span class=\"code-line\"> 2.  Bright Acoustic Piano               66. Alto Sax\r\n</span><span class=\"code-line\"> 3.  Electric Grand Piano                67. Tenor Sax\r\n</span><span class=\"code-line\"> 4.  Honky-tonk Piano                    68. Baritone Sax\r\n</span><span class=\"code-line\"> 5.  Electric Piano 1 (Rhodes Piano)     69. Oboe\r\n</span><span class=\"code-line\"> 6.  Electric Piano 2 (Chorused Piano)   70. English Horn\r\n</span><span class=\"code-line\"> 7.  Harpsichord                         71. Bassoon\r\n</span><span class=\"code-line\"> 8.  Clavinet                            72. Clarinet\r\n</span><span class=\"code-line\"> 9.  Celesta                             73. Piccolo\r\n</span><span class=\"code-line\">10. Glockenspiel                         74. Flute\r\n</span><span class=\"code-line\">11. Music Box                            75. Recorder\r\n</span><span class=\"code-line\">12. Vibraphone                           76. Pan Flute\r\n</span><span class=\"code-line\">13. Marimba                              77. Blown Bottle\r\n</span><span class=\"code-line\">14. Xylophone                            78. Shakuhachi\r\n</span><span class=\"code-line\">15. Tubular Bells                        79. Whistle\r\n</span><span class=\"code-line\">16. Dulcimer (Santur)                    80. Ocarina\r\n</span><span class=\"code-line\">17. Drawbar Organ (Hammond)              81. Lead 1 (square wave)\r\n</span><span class=\"code-line\">18. Percussive Organ                     82. Lead 2 (sawtooth wave)\r\n</span><span class=\"code-line\">19. Rock Organ                           83. Lead 3 (calliope)\r\n</span><span class=\"code-line\">20. Church Organ                         84. Lead 4 (chiffer)\r\n</span><span class=\"code-line\">21. Reed Organ                           85. Lead 5 (charang)\r\n</span><span class=\"code-line\">22. Accordion (French)                   86. Lead 6 (voice solo)\r\n</span><span class=\"code-line\">23. Harmonica                            87. Lead 7 (fifths)\r\n</span><span class=\"code-line\">24. Tango Accordion (Band neon)          88. Lead 8 (bass + lead)\r\n</span><span class=\"code-line\">25. Acoustic Guitar (nylon)              89. Pad 1 (new age Fantasia)\r\n</span><span class=\"code-line\">26. Acoustic Guitar (steel)              90. Pad 2 (warm)\r\n</span><span class=\"code-line\">27. Electric Guitar (jazz)               91. Pad 3 (polysynth)\r\n</span><span class=\"code-line\">28. Electric Guitar (clean)              92. Pad 4 (choir space voice)\r\n</span><span class=\"code-line\">29. Electric Guitar (muted)              93. Pad 5 (bowed glass)\r\n</span><span class=\"code-line\">30. Overdriven Guitar                    94. Pad 6 (metallic pro)\r\n</span><span class=\"code-line\">31. Distortion Guitar                    95. Pad 7 (halo)\r\n</span><span class=\"code-line\">32. Guitar harmonics                     96. Pad 8 (sweep)\r\n</span><span class=\"code-line\">33. Acoustic Bass                        97. FX 1 (rain)\r\n</span><span class=\"code-line\">34. Electric Bass (fingered)             98. FX 2 (soundtrack)\r\n</span><span class=\"code-line\">35. Electric Bass (picked)               99. FX 3 (crystal)\r\n</span><span class=\"code-line\">36. Fretless Bass                       100. FX4 (atmosphere)\r\n</span><span class=\"code-line\">37. Slap Bass 1                         101. FX 5 (brightness)\r\n</span><span class=\"code-line\">38. Slap Bass 2                         102. FX 6 (goblins)\r\n</span><span class=\"code-line\">39. Synth Bass 1                        103. FX 7 (echoes, drops)\r\n</span><span class=\"code-line\">40. Synth Bass 2                        104. FX 8 (sci-fi, star theme)\r\n</span><span class=\"code-line\">41. Violin                              105. Sitar\r\n</span><span class=\"code-line\">42. Viola                               106. Banjo\r\n</span><span class=\"code-line\">43. Cello                               107. Shamisen\r\n</span><span class=\"code-line\">44. Contrabass                          108. Koto\r\n</span><span class=\"code-line\">45. Tremolo Strings                     109. Kalimba\r\n</span><span class=\"code-line\">46. Pizzicato Strings                   110. Bag pipe\r\n</span><span class=\"code-line\">47. Orchestral Harp                     111. Fiddle\r\n</span><span class=\"code-line\">48. Timpani                             112. Shanai\r\n</span><span class=\"code-line\">49. String Ensemble 1 (strings)         113. Tinkle Bell\r\n</span><span class=\"code-line\">50. String Ensemble 2 (slow strings)    114. Agogo\r\n</span><span class=\"code-line\">51. SynthStrings 1                      115. Steel Drums\r\n</span><span class=\"code-line\">52. SynthStrings 2                      116. Woodblock\r\n</span><span class=\"code-line\">53. Choir Aahs                          117. Taiko Drum\r\n</span><span class=\"code-line\">54. Voice Oohs                          118. Melodic Tom\r\n</span><span class=\"code-line\">55. Synth Voice                         119. Synth Drum\r\n</span><span class=\"code-line\">56. Orchestra Hit                       120. Reverse Cymbal\r\n</span><span class=\"code-line\">57. Trumpet                             121. Guitar Fret Noise\r\n</span><span class=\"code-line\">58. Trombone                            122. Breath Noise\r\n</span><span class=\"code-line\">59. Tuba                                123. Seashore\r\n</span><span class=\"code-line\">60. Muted Trumpet                       124. Bird Tweet\r\n</span><span class=\"code-line\">61. French Horn                         125. Telephone Ring\r\n</span><span class=\"code-line\">62. Brass Section                       126. Helicopter\r\n</span><span class=\"code-line\">63. SynthBrass 1                        127. Applause\r\n</span><span class=\"code-line\">64. SynthBrass 2                        128. Gunshot\n</span></code></pre>\n<!--\\\\ \\pagebreak \\\\-->\n<h3 id=\"general-midi-percussion-key-map\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#general-midi-percussion-key-map\"><span class=\"icon icon-link\"></span></a>General MIDI Percussion Key Map</h3>\n<pre class=\"language-text\"><code class=\"language-text code-highlight\"><span class=\"code-line\">35 B1  Acoustic Bass Drum   59 B3  Ride Cymbal 2\r\n</span><span class=\"code-line\">36 C2  Bass Drum 1          60 C4  Hi Bongo\r\n</span><span class=\"code-line\">37 C#2 Side Stick           61 C#4 Low Bongo\r\n</span><span class=\"code-line\">38 D2  Acoustic Snare       62 D4  Mute Hi Conga\r\n</span><span class=\"code-line\">39 D#2 Hand Clap            63 D#4 Open Hi Conga\r\n</span><span class=\"code-line\">40 E2  Electric Snare       64 E4  Low Conga\r\n</span><span class=\"code-line\">41 F2  Low Floor Tom        65 F4  High Timbale\r\n</span><span class=\"code-line\">42 F#2 Closed Hi Hat        66 F#4 Low Timbale\r\n</span><span class=\"code-line\">43 G2  High Floor Tom       67 G4  High Agogo\r\n</span><span class=\"code-line\">44 G#2 Pedal Hi-Hat         68 G#4 Low Agogo\r\n</span><span class=\"code-line\">45 A2  Low Tom              69 A4  Cabasa\r\n</span><span class=\"code-line\">46 A#2 Open Hi-Hat          70 A#4 Maracas\r\n</span><span class=\"code-line\">47 B2  Low-Mid Tom          71 B4  Short Whistle\r\n</span><span class=\"code-line\">48 C3  Hi Mid Tom           72 C5  Long Whistle\r\n</span><span class=\"code-line\">49 C#3 Crash Cymbal 1       73 C#5 Short Guiro\r\n</span><span class=\"code-line\">50 D3  High Tom             74 D5  Long Guiro\r\n</span><span class=\"code-line\">51 D#3 Ride Cymbal 1        75 D#5 Claves\r\n</span><span class=\"code-line\">52 E3  Chinese Cymbal       76 E5  Hi Wood Block\r\n</span><span class=\"code-line\">53 F3  Ride Bell            77 F5  Low Wood Block\r\n</span><span class=\"code-line\">54 F#3 Tambourine           78 F#5 Mute Cuica\r\n</span><span class=\"code-line\">55 G3  Splash Cymbal        79 G5  Open Cuica\r\n</span><span class=\"code-line\">56 G#3 Cowbell              80 G#5 Mute Triangle\r\n</span><span class=\"code-line\">57 A3  Crash Cymbal 2       81 A5  Open Triangle\r\n</span><span class=\"code-line\">58 A#3 Vibraslap\n</span></code></pre>\n<blockquote>\n<p>GS/GM2 Note (as in the chart above)<br>\nThese are the same patch numbers as defined in the original version of GS.\r\nDrum bank is accessed by setting cc#0 (Bank Select MSB) to 120 and cc#32\r\n(Bank Select LSB) to 0 and PC (Program Change) to select drum kit.</p>\n</blockquote>\n<!--\\\\ \\pagebreak \\\\-->\n<h2 id=\"program-fragments-and-example-midi-files\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#program-fragments-and-example-midi-files\"><span class=\"icon icon-link\"></span></a>Program Fragments and Example MIDI Files</h2>\n<p>Here are some of the routines to read and write variable-length numbers in\r\nMIDI Files. These routines are in C, and use getc and putc, which read and\r\nwrite single 8-bit characters from/to the files infile and outfile.</p>\n<pre class=\"language-c\"><code class=\"language-c code-highlight\"><span class=\"code-line\"><span class=\"token function\">WriteVarLen</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">register</span> <span class=\"token keyword\">long</span> value<span class=\"token punctuation\">;</span>\r\n</span><span class=\"code-line\"><span class=\"token punctuation\">{</span>\r\n</span><span class=\"code-line\">  <span class=\"token keyword\">register</span> <span class=\"token keyword\">long</span> buffer<span class=\"token punctuation\">;</span>\r\n</span><span class=\"code-line\">  buffer <span class=\"token operator\">=</span> value <span class=\"token operator\">&#x26;</span> <span class=\"token number\">0x7f</span><span class=\"token punctuation\">;</span>\r\n</span><span class=\"code-line\">  <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">>>=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\r\n</span><span class=\"code-line\">  <span class=\"token punctuation\">{</span>\r\n</span><span class=\"code-line\">    buffer <span class=\"token operator\">&#x3C;&#x3C;=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\r\n</span><span class=\"code-line\">    buffer <span class=\"token operator\">|=</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">;</span>\r\n</span><span class=\"code-line\">    buffer <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">&#x26;</span><span class=\"token number\">0x7f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\r\n</span><span class=\"code-line\">  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>TRUE<span class=\"token punctuation\">)</span>\r\n</span><span class=\"code-line\">  <span class=\"token punctuation\">{</span>\r\n</span><span class=\"code-line\">    <span class=\"token function\">putc</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span>outfile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</span><span class=\"code-line\">    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>buffer <span class=\"token operator\">&#x26;</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span> buffer <span class=\"token operator\">>>=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\r\n</span><span class=\"code-line\">    <span class=\"token keyword\">else</span>\r\n</span><span class=\"code-line\">    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\r\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\r\n</span><span class=\"code-line\">doubleword <span class=\"token function\">ReadVarLen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n</span><span class=\"code-line\"><span class=\"token punctuation\">{</span>\r\n</span><span class=\"code-line\">  <span class=\"token keyword\">register</span> doubleword value<span class=\"token punctuation\">;</span>\r\n</span><span class=\"code-line\">  <span class=\"token keyword\">register</span> byte c<span class=\"token punctuation\">;</span>\r\n</span><span class=\"code-line\">  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token function\">getc</span><span class=\"token punctuation\">(</span>infile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x26;</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span>\r\n</span><span class=\"code-line\">  <span class=\"token punctuation\">{</span>\r\n</span><span class=\"code-line\">    value <span class=\"token operator\">&#x26;=</span> <span class=\"token number\">0x7f</span><span class=\"token punctuation\">;</span>\r\n</span><span class=\"code-line\">    <span class=\"token keyword\">do</span>\r\n</span><span class=\"code-line\">    <span class=\"token punctuation\">{</span>\r\n</span><span class=\"code-line\">      value <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">=</span> <span class=\"token function\">getc</span><span class=\"token punctuation\">(</span>infile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x26;</span> <span class=\"token number\">0x7f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</span><span class=\"code-line\">    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">&#x26;</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\r\n</span><span class=\"code-line\">  <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span></code></pre>\n<!--\\\\ \\pagebreak \\\\-->\n<p>As an example, MIDI Files for the following excerpt are shown below. First, a\r\nformat 0 file is shown, with all information intermingled; then, a format 1\r\nfile is shown with all data separated into four tracks: one for tempo and\r\ntime signature, and three for the notes. A resolution of 96 “ticks” per\r\nquarter note is used. A time signature of <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mn>4</mn><mn>4</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{4}{4}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1901em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">4</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">4</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span> and a tempo of 120,\r\nthough implied, are explicitly stated.</p>\n<p><img src=\"/images/smfio/cleft.png\" alt=\"Example: MIDI Source Information\"></p>\n<!--\\\\ \\pagebreak \\\\-->\n<p>The contents of the MIDI stream represented by this example are broken down here:</p>\n<table>\n<thead>\n<tr>\n<th>Delta Time (decimal)</th>\n<th>Event-Code (hex)</th>\n<th>Other bytes (decimal)</th>\n<th>Comment</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>0</code></td>\n<td><code>FF 58</code></td>\n<td><code>04 04 02 24 08</code></td>\n<td>4 bytes; <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mn>4</mn><mn>4</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{4}{4}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1901em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">4</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">4</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span> time; 24 MIDI clocks/click, 8 32nd notes/ 24 MIDI clocks (24 MIDI clocks = 1 crotchet = 1 beat)</td>\n</tr>\n<tr>\n<td><code>0</code></td>\n<td><code>FF 51</code></td>\n<td><code>03 500000</code></td>\n<td>3 bytes: 500,000 usec / quarter note = 120 beats/minute</td>\n</tr>\n<tr>\n<td><code>0</code></td>\n<td><code>C0</code></td>\n<td><code>5</code></td>\n<td>Ch.1 Program Change 5 = GM Patch 6 = Electric Piano 2</td>\n</tr>\n<tr>\n<td><code>0</code></td>\n<td><code>C1</code></td>\n<td><code>46</code></td>\n<td>Ch.2 Program Change 46 = GM Patch 47 = Harp</td>\n</tr>\n<tr>\n<td><code>0</code></td>\n<td><code>C2</code></td>\n<td><code>70</code></td>\n<td>Ch.3 Program Change 70 = GM Patch 71 = Bassoon</td>\n</tr>\n<tr>\n<td><code>0</code></td>\n<td><code>92</code></td>\n<td><code>48 96</code></td>\n<td>Ch.3 Note On C3, forte</td>\n</tr>\n<tr>\n<td><code>0</code></td>\n<td><code>92</code></td>\n<td><code>60 96</code></td>\n<td>Ch.3 Note On C4, forte</td>\n</tr>\n<tr>\n<td><code>96</code></td>\n<td><code>91</code></td>\n<td><code>67 64</code></td>\n<td>Ch.2 Note On G4, mezzo-forte</td>\n</tr>\n<tr>\n<td><code>96</code></td>\n<td><code>90</code></td>\n<td><code>76 32</code></td>\n<td>Ch.1 Note On E5, piano</td>\n</tr>\n<tr>\n<td><code>192</code></td>\n<td><code>82</code></td>\n<td><code>48 64</code></td>\n<td>Ch.3 Note Off C3, standard</td>\n</tr>\n<tr>\n<td><code>0</code></td>\n<td><code>82</code></td>\n<td><code>60 64</code></td>\n<td>Ch.3 Note Off C4, standard</td>\n</tr>\n<tr>\n<td><code>0</code></td>\n<td><code>81</code></td>\n<td><code>67 64</code></td>\n<td>Ch.2 Note Off G4, standard</td>\n</tr>\n<tr>\n<td><code>0</code></td>\n<td><code>80</code></td>\n<td><code>76 64</code></td>\n<td>Ch.1 Note Off E5, standard</td>\n</tr>\n<tr>\n<td><code>0</code></td>\n<td><code>FF 2F</code></td>\n<td><code>00</code></td>\n<td>Track End</td>\n</tr>\n</tbody>\n</table>\n<p>The entire format 0 MIDI file contents in hex follow. First, the header chunk:</p>\n<pre class=\"language-text\"><code class=\"language-text code-highlight\"><span class=\"code-line\">4D 54 68 64 MThd\r\n</span><span class=\"code-line\">00 00 00 06 chunk length\r\n</span><span class=\"code-line\">00 00       format 0\r\n</span><span class=\"code-line\">00 01       one track\r\n</span><span class=\"code-line\">00 60       96 per quarter-note\n</span></code></pre>\n<!--\\\\ \\pagebreak \\\\-->\n<p>Then the track chunk. Its header followed by the events (notice the running\r\nstatus is used in places):</p>\n<table>\n<thead>\n<tr>\n<th>Delta-Time</th>\n<th>Event</th>\n<th>Comments</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>00</code></td>\n<td><code>FF 58 04 04 02 18 08</code></td>\n<td>time signature</td>\n</tr>\n<tr>\n<td><code>00</code></td>\n<td><code>FF 51 03 07 A1 20</code></td>\n<td>tempo</td>\n</tr>\n<tr>\n<td><code>00</code></td>\n<td><code>C0 05</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>00</code></td>\n<td><code>C1 2E</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>00</code></td>\n<td><code>C2 46</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>00</code></td>\n<td><code>92 30 60</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>00</code></td>\n<td><code>3C 60</code></td>\n<td>running status</td>\n</tr>\n<tr>\n<td><code>60</code></td>\n<td><code>91 43 40</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>60</code></td>\n<td><code>90 4C 20</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>81 40</code></td>\n<td><code>82 30 40</code></td>\n<td>two-byte delta-time</td>\n</tr>\n<tr>\n<td><code>00</code></td>\n<td><code>3C 40</code></td>\n<td>running status</td>\n</tr>\n<tr>\n<td><code>00</code></td>\n<td><code>81 43 40</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>00</code></td>\n<td><code>80 4C 40</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>00</code></td>\n<td><code>FF 2F 00</code></td>\n<td>end of track</td>\n</tr>\n</tbody>\n</table>\n<p>A format 1 representation of the file is slightly different. Its header chunk:</p>\n<pre class=\"language-text\"><code class=\"language-text code-highlight\"><span class=\"code-line\">4D 54 68 64 MThd\r\n</span><span class=\"code-line\">00 00 00 06 chunk length\r\n</span><span class=\"code-line\">00 01       format 1\r\n</span><span class=\"code-line\">00 04       four tracks\r\n</span><span class=\"code-line\">00 60       96 per quarter note\r\n</span><span class=\"code-line\">\r\n</span><span class=\"code-line\">4D 54 72 6B MTrk\r\n</span><span class=\"code-line\">00 00 00 14 chunk length (20)\n</span></code></pre>\n<table>\n<thead>\n<tr>\n<th>Delta-Time</th>\n<th>Event</th>\n<th>Comments</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>00</code></td>\n<td><code>FF 58 04 04 02 18 08</code></td>\n<td>time signature</td>\n</tr>\n<tr>\n<td><code>00</code></td>\n<td><code>FF 51 03 07 A1 20</code></td>\n<td>tempo</td>\n</tr>\n<tr>\n<td><code>83 00</code></td>\n<td><code>FF 2F 00</code></td>\n<td>end of track</td>\n</tr>\n</tbody>\n</table>\n<p>Then, the track chunk for the first music track. The MIDI convention for note\r\non/off running status is used in this example:</p>\n<pre class=\"language-text\"><code class=\"language-text code-highlight\"><span class=\"code-line\">4D 54 72 6B MTrk\r\n</span><span class=\"code-line\">00 00 00 10 chunk length (16)\n</span></code></pre>\n<table>\n<thead>\n<tr>\n<th>Delta-Time</th>\n<th>Event</th>\n<th>Comments</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>00</code></td>\n<td><code>C0 05</code></td>\n<td>time signature</td>\n</tr>\n<tr>\n<td><code>00</code></td>\n<td><code>90 4C 20</code></td>\n<td>tempo</td>\n</tr>\n<tr>\n<td><code>83 00</code></td>\n<td><code>4C 00</code></td>\n<td>Running status: note on, vel=0</td>\n</tr>\n<tr>\n<td><code>00 FF 2F 00</code></td>\n<td></td>\n<td>end of track</td>\n</tr>\n</tbody>\n</table>\n<p>Then, the track chunk for the second music track:</p>\n<pre class=\"language-text\"><code class=\"language-text code-highlight\"><span class=\"code-line\">4D 54 72 6B MTrk\r\n</span><span class=\"code-line\">00 00 00 0F chunk length (15)\n</span></code></pre>\n<table>\n<thead>\n<tr>\n<th>Delta-Time</th>\n<th>Event</th>\n<th>Comments</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>00</code></td>\n<td><code>C1 2E</code></td>\n<td>time signature</td>\n</tr>\n<tr>\n<td><code>00</code></td>\n<td><code>91 43 40</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>83 00</code></td>\n<td><code>43 00</code></td>\n<td>running status</td>\n</tr>\n<tr>\n<td><code>00 FF 2F 00</code></td>\n<td></td>\n<td>end of track ‘eot’</td>\n</tr>\n</tbody>\n</table>\n<p>Then, the track chunk for the third music track:</p>\n<pre class=\"language-text\"><code class=\"language-text code-highlight\"><span class=\"code-line\">4D 54 72 6B MTrk\r\n</span><span class=\"code-line\">00 00 00 15 chunk length (21)\n</span></code></pre>\n<table>\n<thead>\n<tr>\n<th>Delta-Time</th>\n<th>Event</th>\n<th>Comments</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>00</code></td>\n<td><code>C2 46</code></td>\n<td>time signature</td>\n</tr>\n<tr>\n<td><code>00</code></td>\n<td><code>92 30 60</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>82 20</code></td>\n<td><code>3C 60</code></td>\n<td>running status</td>\n</tr>\n<tr>\n<td><code>83 00</code></td>\n<td><code>30 00</code></td>\n<td>two-byte delta-time, running status</td>\n</tr>\n<tr>\n<td><code>00</code></td>\n<td><code>3C 00</code></td>\n<td>running status</td>\n</tr>\n<tr>\n<td><code>00 FF 2F 00</code></td>\n<td></td>\n<td>end of track</td>\n</tr>\n</tbody>\n</table>\n<!--\\\\ \\pagebreak \\\\-->\n<h2 id=\"universal-system-exclusive-messages\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#universal-system-exclusive-messages\"><span class=\"icon icon-link\"></span></a>Universal System Exclusive Messages</h2>\n<p><a href=\"https://www.midi.org/specifications/item/table-4-universal-system-exclusive-messages\" target=\"_blank\" rel=\"nofollow\">https://www.midi.org/specifications/item/table-4-universal-system-exclusive-messages</a></p>\n<p>The following table lists all currently defined Universal System Exclusive Messages.\r\nUniversal System Exclusive Messages are defined as Real Time or Non-Real Time, and are used for extensions to MIDI that are NOT intended to be manufacturer exclusive (despite the name).</p>\n<p>Many of these messages are defined in Specifications whose printed documentation is available from the MMA. Others are defined in Recommended Practice documentation that may be found on this web site.</p>\n<blockquote>\n<p>WARNING! Details about implementing these messages can dramatically impact compatibility with other products. We strongly recommend consulting the appropriate MMA Specification or Recommended Practice for additional information.</p>\n</blockquote>\n<h3 id=\"table-non-real-time-7eh\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#table-non-real-time-7eh\"><span class=\"icon icon-link\"></span></a>Table: Non-Real Time (7EH)</h3>\n<table>\n<thead>\n<tr>\n<th>id1</th>\n<th>id2</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>00</code></td>\n<td></td>\n<td><strong>Unused</strong></td>\n</tr>\n<tr>\n<td><code>01</code></td>\n<td></td>\n<td><strong>Sample Dump Header</strong></td>\n</tr>\n<tr>\n<td><code>02</code></td>\n<td></td>\n<td><strong>Sample Data Packet</strong></td>\n</tr>\n<tr>\n<td><code>03</code></td>\n<td></td>\n<td><strong>Sample Dump Request</strong></td>\n</tr>\n<tr>\n<td><code>04</code></td>\n<td><em>nn</em></td>\n<td><strong>MIDI Time Code</strong></td>\n</tr>\n<tr>\n<td> </td>\n<td>00</td>\n<td>Special</td>\n</tr>\n<tr>\n<td> </td>\n<td>01</td>\n<td>Punch In Points</td>\n</tr>\n<tr>\n<td> </td>\n<td>02</td>\n<td>Punch Out Points</td>\n</tr>\n<tr>\n<td> </td>\n<td>03</td>\n<td>Delete Punch In Points</td>\n</tr>\n<tr>\n<td> </td>\n<td>04</td>\n<td>Delete Punch Out Points</td>\n</tr>\n<tr>\n<td> </td>\n<td>05</td>\n<td>Event Start Point</td>\n</tr>\n<tr>\n<td> </td>\n<td>06</td>\n<td>Event Stop Point</td>\n</tr>\n<tr>\n<td> </td>\n<td>07</td>\n<td>Event Start Points with additional info.</td>\n</tr>\n<tr>\n<td> </td>\n<td>08</td>\n<td>Event Stop Points with additional info.</td>\n</tr>\n<tr>\n<td> </td>\n<td>09</td>\n<td>Delete Event Start Point</td>\n</tr>\n<tr>\n<td> </td>\n<td>0A</td>\n<td>Delete Event Stop Point</td>\n</tr>\n<tr>\n<td> </td>\n<td>0B</td>\n<td>Cue Points</td>\n</tr>\n<tr>\n<td> </td>\n<td>0C</td>\n<td>Cue Points with additional info.</td>\n</tr>\n<tr>\n<td> </td>\n<td>0D</td>\n<td>Delete Cue Point</td>\n</tr>\n<tr>\n<td> </td>\n<td>0E</td>\n<td>Event Name in additional info.</td>\n</tr>\n<tr>\n<td><code>05</code></td>\n<td><em>nn</em></td>\n<td><strong>Sample Dump Extensions</strong></td>\n</tr>\n<tr>\n<td> </td>\n<td>01</td>\n<td>Loop Points Transmission</td>\n</tr>\n<tr>\n<td> </td>\n<td>02</td>\n<td>Loop Points Request</td>\n</tr>\n<tr>\n<td> </td>\n<td>03</td>\n<td>Sample Name Transmission</td>\n</tr>\n<tr>\n<td> </td>\n<td>04</td>\n<td>Sample Name Request</td>\n</tr>\n<tr>\n<td> </td>\n<td>05</td>\n<td>Extended Dump Header</td>\n</tr>\n<tr>\n<td> </td>\n<td>06</td>\n<td>Extended Loop Points Transmission</td>\n</tr>\n<tr>\n<td> </td>\n<td>07</td>\n<td>Extended Loop Points Request</td>\n</tr>\n<tr>\n<td><code>06</code></td>\n<td><em>nn</em></td>\n<td><strong>General Information</strong></td>\n</tr>\n<tr>\n<td> </td>\n<td>01</td>\n<td>Identity Request</td>\n</tr>\n<tr>\n<td> </td>\n<td>02</td>\n<td>Identity Reply</td>\n</tr>\n<tr>\n<td><code>07</code></td>\n<td><em>nn</em></td>\n<td><strong>File Dump</strong></td>\n</tr>\n<tr>\n<td> </td>\n<td>01</td>\n<td>Header</td>\n</tr>\n<tr>\n<td> </td>\n<td>02</td>\n<td>Data Packet</td>\n</tr>\n<tr>\n<td> </td>\n<td>03</td>\n<td>Request</td>\n</tr>\n<tr>\n<td><code>08</code></td>\n<td><em>nn</em></td>\n<td><strong>MIDI Tuning Standard (Non-Real Time)</strong></td>\n</tr>\n<tr>\n<td> </td>\n<td>00</td>\n<td>Bulk Dump Request</td>\n</tr>\n<tr>\n<td> </td>\n<td>01</td>\n<td>Bulk Dump Reply</td>\n</tr>\n<tr>\n<td> </td>\n<td>03</td>\n<td>Tuning Dump Request</td>\n</tr>\n<tr>\n<td> </td>\n<td>04</td>\n<td>Key-Based Tuning Dump</td>\n</tr>\n<tr>\n<td> </td>\n<td>05</td>\n<td>Scale/Octave Tuning Dump, 1 byte format</td>\n</tr>\n<tr>\n<td> </td>\n<td>06</td>\n<td>Scale/Octave Tuning Dump, 2 byte format</td>\n</tr>\n<tr>\n<td> </td>\n<td>07</td>\n<td>Single Note Tuning Change with Bank Select</td>\n</tr>\n<tr>\n<td> </td>\n<td>08</td>\n<td>Scale/Octave Tuning, 1 byte format</td>\n</tr>\n<tr>\n<td> </td>\n<td>09</td>\n<td>Scale/Octave Tuning, 2 byte format</td>\n</tr>\n<tr>\n<td><code>09</code></td>\n<td><em>nn</em></td>\n<td><strong>General MIDI</strong></td>\n</tr>\n<tr>\n<td> </td>\n<td>01</td>\n<td>General MIDI 1 System On</td>\n</tr>\n<tr>\n<td> </td>\n<td>02</td>\n<td>General MIDI System Off</td>\n</tr>\n<tr>\n<td> </td>\n<td>03</td>\n<td>General MIDI 2 System On</td>\n</tr>\n<tr>\n<td><code>0A</code></td>\n<td><em>nn</em></td>\n<td><strong>Downloadable Sounds</strong></td>\n</tr>\n<tr>\n<td> </td>\n<td>01</td>\n<td>Turn DLS On</td>\n</tr>\n<tr>\n<td> </td>\n<td>02</td>\n<td>Turn DLS Off</td>\n</tr>\n<tr>\n<td> </td>\n<td>03</td>\n<td>Turn DLS Voice Allocation Off</td>\n</tr>\n<tr>\n<td> </td>\n<td>04</td>\n<td>Turn DLS Voice Allocation On</td>\n</tr>\n<tr>\n<td><code>0B</code></td>\n<td><em>nn</em></td>\n<td><strong>File Reference Message</strong></td>\n</tr>\n<tr>\n<td> </td>\n<td>00</td>\n<td>reserved (do not use)</td>\n</tr>\n<tr>\n<td> </td>\n<td>01</td>\n<td>Open File</td>\n</tr>\n<tr>\n<td> </td>\n<td>02</td>\n<td>Select or Reselect Contents</td>\n</tr>\n<tr>\n<td> </td>\n<td>03</td>\n<td>Open File and Select Contents</td>\n</tr>\n<tr>\n<td> </td>\n<td>04</td>\n<td>Close File</td>\n</tr>\n<tr>\n<td> </td>\n<td>05-7F</td>\n<td>reserved (do not use)</td>\n</tr>\n<tr>\n<td><code>0C</code></td>\n<td><em>nn</em></td>\n<td><strong>MIDI Visual Control</strong></td>\n</tr>\n<tr>\n<td> </td>\n<td>00-7F</td>\n<td>MVC Commands (See MVC Documentation)</td>\n</tr>\n<tr>\n<td><code>0D</code></td>\n<td><em>nn</em></td>\n<td>MIDI Capability Inquiry</td>\n</tr>\n<tr>\n<td> </td>\n<td>00-7F</td>\n<td>Inquiry/Response Messages (See Documentation)</td>\n</tr>\n<tr>\n<td><code>7B</code></td>\n<td><em>nn</em></td>\n<td>End of File</td>\n</tr>\n<tr>\n<td><code>7C</code></td>\n<td><em>nn</em></td>\n<td>Wait</td>\n</tr>\n<tr>\n<td><code>7D</code></td>\n<td><em>nn</em></td>\n<td>Cancel</td>\n</tr>\n<tr>\n<td><code>7E</code></td>\n<td><em>nn</em></td>\n<td>NAK</td>\n</tr>\n<tr>\n<td><code>7F</code></td>\n<td><em>nn</em></td>\n<td>ACK</td>\n</tr>\n</tbody>\n</table>\n<p>Table: Non-Real Time (7EH)</p>\n<h3 id=\"table-real-time-7fh---universal-system-exclusive-messages\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#table-real-time-7fh---universal-system-exclusive-messages\"><span class=\"icon icon-link\"></span></a>Table: Real Time (7FH) - Universal System Exclusive Messages</h3>\n<table>\n<thead>\n<tr>\n<th>id1</th>\n<th>id2</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>00</code></td>\n<td>–</td>\n<td>Unused</td>\n</tr>\n<tr>\n<td><code>01</code></td>\n<td><code>nn</code></td>\n<td>MIDI Time Code</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>01</code></td>\n<td>Full Message</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>02</code></td>\n<td>User Bits</td>\n</tr>\n<tr>\n<td><code>02</code></td>\n<td><code>nn</code></td>\n<td>MIDI Show Control</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>00</code></td>\n<td>MSC Extensions</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>01-7F</code></td>\n<td>MSC Commands (see MSC Documentation)</td>\n</tr>\n<tr>\n<td><code>03</code></td>\n<td><code>nn</code></td>\n<td>Notation Information</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>01</code></td>\n<td>Bar Number</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>02</code></td>\n<td>Time Signature (Immediate)</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>42</code></td>\n<td>Time Signature (Delayed)</td>\n</tr>\n<tr>\n<td><code>04</code></td>\n<td><code>nn</code></td>\n<td>Device Control</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>01</code></td>\n<td>Master Volume</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>02</code></td>\n<td>Master Balance</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>03</code></td>\n<td>Master Fine Tuning</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>04</code></td>\n<td>Master Coarse Tuning</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>05</code></td>\n<td>Global Parameter Control</td>\n</tr>\n<tr>\n<td><code>05</code></td>\n<td><code>nn</code></td>\n<td>Real Time MTC Cueing</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>00</code></td>\n<td>Special</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>01</code></td>\n<td>Punch In Points</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>02</code></td>\n<td>Punch Out Points</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>03</code></td>\n<td>(Reserved)</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>04</code></td>\n<td>(Reserved)</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>05</code></td>\n<td>Event Start points</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>06</code></td>\n<td>Event Stop points</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>07</code></td>\n<td>Event Start points with additional info.</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>08</code></td>\n<td>Event Stop points with additional info.</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>09</code></td>\n<td>(Reserved)</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>0A</code></td>\n<td>(Reserved)</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>0B</code></td>\n<td>Cue points</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>0C</code></td>\n<td>Cue points with additional info.</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>0D</code></td>\n<td>(Reserved)</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>0E</code></td>\n<td>Event Name in additional info.</td>\n</tr>\n<tr>\n<td><code>06</code></td>\n<td><code>nn</code></td>\n<td>MIDI Machine Control Commands</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>00-7F</code></td>\n<td>MMC Commands (See MMC Documentation)</td>\n</tr>\n<tr>\n<td><code>07</code></td>\n<td><code>nn</code></td>\n<td>MIDI Machine Control Responses</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>00-7F</code></td>\n<td>MMC Responses (See MMC Documentation)</td>\n</tr>\n<tr>\n<td><code>08</code></td>\n<td><code>nn</code></td>\n<td>MIDI Tuning Standard (Real Time)</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>02</code></td>\n<td>Single Note Tuning Change</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>07</code></td>\n<td>Single Note Tuning Change with Bank Select</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>08</code></td>\n<td>Scale/Octave Tuning, 1 byte format</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>09</code></td>\n<td>Scale/Octave Tuning, 2 byte format</td>\n</tr>\n<tr>\n<td><code>09</code></td>\n<td><code>nn</code></td>\n<td>Controller Destination Setting (See GM2 Documentation)</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>01</code></td>\n<td>Channel Pressure (Aftertouch)</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>02</code></td>\n<td>Polyphonic Key Pressure (Aftertouch)</td>\n</tr>\n<tr>\n<td> </td>\n<td><code>03</code></td>\n<td>Controller (Control Change)</td>\n</tr>\n<tr>\n<td><code>0A</code></td>\n<td><code>01</code></td>\n<td>Key-based Instrument Control</td>\n</tr>\n<tr>\n<td><code>0B</code></td>\n<td><code>01</code></td>\n<td>Scalable Polyphony MIDI MIP Message</td>\n</tr>\n<tr>\n<td><code>0C</code></td>\n<td><code>00</code></td>\n<td>Mobile Phone Control Message</td>\n</tr>\n</tbody>\n</table>\n<p>Table: Real Time (7FH) - Universal System Exclusive Messages</p>\n<h2 id=\"midi-time-code\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#midi-time-code\"><span class=\"icon icon-link\"></span></a>MIDI Time Code</h2>\n<blockquote>\n<p><a href=\"https://www.midi.org/specifications-old/item/the-midi-1-0-specification\" target=\"_blank\" rel=\"nofollow\">https://www.midi.org/specifications-old/item/the-midi-1-0-specification</a></p>\n</blockquote>\n<p>MIDI Time Code (MTC) is a sub-protocol within MIDI, and is used to keep 2 devices that control some sort of timed performance (ie, maybe a sequencer and a video deck) in sync. MTC messages are an alternative to using MIDI Clocks and Song Position Pointer messages. MTC is essentially SMPTE mutated for transmission over MIDI. SMPTE timing is referenced from an absolute “time of day”. On the other hand, MIDI Clocks and Song Position Pointer are based upon musical beats from the start of a song, played at a specific Tempo. For many (non-musical) cues, it’s easier for humans to reference time in some absolute way rather than based upon musical beats at a certain tempo.</p>\n<p>There are several MIDI messages which make up the MTC protocol. All but one are specially defined SysEx messages.</p>\n<p>The most important message is the Quarter Frame message (which is not a SysEx message). It has a status of 0xF1, and one subsequent data byte. This message is sent periodically to keep track of the running SMPTE time. It’s analogous to the MIDI Clock message. The Quarter Frame messages are sent at a rate of 4 per each SMPTE Frame. In other words, by the time that a slave has received 4 Quarter Frame messages, a SMPTE Frame has passed. So, the Quarter Frame messages provide a “sub-frame” clock reference. (With 30 fps SMPTE, this “clock tick” happens every 8.3 milliseconds).</p>\n<p>But the Quarter Frame is more than just a quarter frame “clock tick”. The Quarter Frame message’s data byte contains the SMPTE time (ie, hours, minutes, seconds, and frames). SMPTE time is normally expressed in 80 bits. Obviously, this is too many bits to be contained in 1 8-bit data byte. So, each Quarter Frame message contains just one piece of the time (for example, one Quarter Frame may contain only the hours). In order to get the entire SMPTE time at any given point, a slave needs to receive several Quarter Frame messages, and piece the current SMPTE time together from those messages. It takes 8 Quarter Frame messages to convey the current SMPTE time. In other words, by the time that a slave can piece together the current SMPTE time, two SMPTE frames have passed (ie, since there are 4 Quarter Frame messages in each frame). So, MTC’s version of SMPTE time actually counts in increments of 2 SMPTE Frames per each update of the current SMPTE time.</p>\n<p>The first (of 8) Quarter Frame message contains the low nibble (ie, bits 0 to 3) of the Frame Time. The second Quarter Frame message contains the high nibble (ie, bits 4 to 7) of the Frame Time. The third and fourth messages contain the low and high nibbles of the Seconds Time. The fifth and sixth messages contain the low and high nibbles of the Minutes Time. The seventh and eighth messages contain the low and high nibbles of the Hours Time. The eighth message also contains the SMPTE frames-per-second Type (ie, 24, 25, 30 drop, or 30 fps). If you were to break up the Quarter Frame’s data byte into its 7 bits, the format is:</p>\n<p><code>0nnn dddd</code></p>\n<p>where <code>nnn</code> is one of 7 possible values which tell you what <code>dddd</code> represents. Here are the 7 values, and what each causes <code>dddd</code> to represent.</p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th><code>dddd</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>Current Frames Low Nibble</td>\n</tr>\n<tr>\n<td>1</td>\n<td>Current Frames High Nibble</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Current Seconds Low Nibble</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Current Seconds High Nibble</td>\n</tr>\n<tr>\n<td>4</td>\n<td>Current Minutes Low Nibble</td>\n</tr>\n<tr>\n<td>5</td>\n<td>Current Minutes High Nibble</td>\n</tr>\n<tr>\n<td>6</td>\n<td>Current Hours Low Nibble</td>\n</tr>\n<tr>\n<td>7</td>\n<td>Current Hours High Nibble and SMPTE Type</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>0xF1 0x25</code></td>\n<td>means that the 5 is the low nibble of the Seconds Time (because nnn is 2). If the following Quarter Frame is subsequently received,</td>\n</tr>\n<tr>\n<td><code>0xF1 0x32</code></td>\n<td>then this means that 2 is the high nibble of the Seconds Time.  Therefore, the current SMPTE Seconds is <code>0x25</code> (ie, 37 seconds).</td>\n</tr>\n</tbody>\n</table>\n<p>In the data byte for the Hours High Nibble and SMPTE Type, the bits are interpreted as follows:</p>\n<p><code>0nnn x yy d</code></p>\n<p>where <code>nnn</code> is 7. <code>x</code> is unused and set to 0. <code>d</code> is bit 4 of the Hours Time. <code>yy</code> tells the SMPTE Type as follows:</p>\n<table>\n<thead>\n<tr>\n<th><code>yy</code></th>\n<th>fps</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>24</td>\n</tr>\n<tr>\n<td>1</td>\n<td>25</td>\n</tr>\n<tr>\n<td>2</td>\n<td>30 (Drop-Frame)</td>\n</tr>\n<tr>\n<td>3</td>\n<td>30</td>\n</tr>\n</tbody>\n</table>\n<!--\\\\ \\pagebreak \\\\--> When MTC is running in the forward direction (ie, time is advancing), the Quarter Frame messages are sent in the order of Frames Low Nibble to Hours High Nibble. In other words, the order looks something like this:\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>0xF1 0x0n</code></td>\n<td>where <code>n</code> is the current Frames Low Nibble</td>\n</tr>\n<tr>\n<td><code>0xF1 0x1n</code></td>\n<td>where <code>n</code> is the current Frames High Nibble</td>\n</tr>\n<tr>\n<td><code>0xF1 0x2n</code></td>\n<td>where <code>n</code> etc.</td>\n</tr>\n<tr>\n<td><code>0xF1 0x3n</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>0xF1 0x4n</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>0xF1 0x5n</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>0xF1 0x6n</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>0xF1 0x7n</code></td>\n<td>When MTC is running in reverse (ie, time is going backwards), these are sent in the opposite order, ie, the Hours High Nibble is sent first and the Frames Low Nibble is last. The arrival of the <code>0xF1</code> <code>0x0n</code> and <code>0xF1</code> <code>0x4n</code> messages always denote where SMPTE Frames actually occur in realtime.</td>\n</tr>\n</tbody>\n</table>\n<p>Since 8 Quarter Frame messages are required to piece together the current SMPTE time, timing lock can’t be achieved until the slave has received all 8 messages. This will take from 2 to 4 SMPTE Frames, depending upon when the slave comes online.</p>\n<p>The Frame number (contained in the first 2 Quarter Frame messages) is the SMPTE Frames Time for when the first Quarter Frame message is sent. But, because it takes 7 more Quarter Frames to piece together the current SMPTE Time, when the slave does finally piece the time together, it is actually 2 SMPTE Frames behind the real current time. So, for display purposes, the slave should always add 2 frames to the current time.</p>\n<!--\\\\ \\pagebreak \\\\-->\n<p>For cueing the slave to a particular start point, Quarter Frame messages are\r\nnot used. Instead, an MTC Full Frame message should be sent. The Full Frame\r\nis a SysEx message that encodes the entire SMPTE time in one message as so\r\n(in hex):</p>\n<p><code>F0 7F cc 01 01 hr mn sc fr F7</code></p>\n<p>cc is the SysEx channel (0 to 127). It is suggested that a device default to\r\nusing its Manufacturer’s SysEx ID number for this channel, giving the\r\nmusician the option of changing it. Channel number 0x7F is used to indicate\r\nthat all devices on the daisy-chain should recognize this Full Frame message.</p>\n<p>The <code>hr</code>, <code>mn</code>, <code>sc</code>, and <code>fr</code> are the hours, minutes, seconds, and frames\r\nof the current SMPTE time. The hours byte also contains the SMPTE Type as\r\nper the Quarter Frame’s Hours High Nibble message.</p>\n<p>The Full Frame simply cues a slave to a particular SMPTE time. The slave\r\ndoesn’t actually start running until it starts receiving Quarter Frame\r\nmessages. (Which implies that a slave is stopped whenever it is not\r\nreceiving Quarter Frame messages). The master should pause after sending a\r\nFull Frame, and before sending a Quarter Frame, in order to give the slave\r\ntime to cue to the desired SMPTE time.</p>\n<p>During fast forward or rewind (ie, shuttle) modes, the master should not\r\ncontinuously send Quarter Frame messages, but rather, send Full Frame\r\nmessages at regular intervals.</p>\n<!--\\\\ \\pagebreak \\\\-->\n<p>SMPTE also provides for 32 “user bits”, information for special functions\r\nwhich vary with each product. (Usually, these bits can only be programmed\r\nfrom equipment that supports such). Upto 4 characters or 8 digits can be\r\nwritten. Examples of use are adding a date code or reel number to a tape.\r\nThe user bits tend not to change throughout a run of time code, so rather\r\nthan stuffing this information into a Quarter Frame, MTC provides a separate\r\nSysEx message to transmit this info.</p>\n<p><code>F0 7F cc 01 02 u1 u2 u3 u4 u5 u6 u7 u8 u9 F7</code></p>\n<p><code>cc</code> is the SysEx channel (0 to 127). Only the low nibble of each of the\r\nfirst 8 data bytes is used. Only the 2 low bits of u9 is used.</p>\n<pre class=\"language-text\"><code class=\"language-text code-highlight\"><span class=\"code-line\">u1 = 0000aaaa \r\n</span><span class=\"code-line\">u2 = 0000bbbb \r\n</span><span class=\"code-line\">u3 = 0000cccc \r\n</span><span class=\"code-line\">u4 = 0000dddd \r\n</span><span class=\"code-line\">u5 = 0000eeee \r\n</span><span class=\"code-line\">u6 = 0000ffff \r\n</span><span class=\"code-line\">u7 = 0000gggg \r\n</span><span class=\"code-line\">u8 = 0000hhhh \r\n</span><span class=\"code-line\">u9 = 000000ii\n</span></code></pre>\n<p>These nibbles decode into an 8-bit format of <code>aaaabbbb</code> <code>ccccdddd</code> <code>eeeeffff</code>\r\n<code>gggghhhh</code> <code>ii</code>. It forms 4 8-bit characters, and a 2 bit Format Code. u1\r\nthrough <code>u8</code> correspond to the SMPTE Binary Groups 1 through 8. <code>u9</code> are the\r\n2 Binary Group Flag Bits, defined by SMPTE.</p>\n<p>The Users Bits messages can be sent at any time, whenever these values must\r\nbe passed to some device on the daisy-chain.</p>\n<!--\\\\ \\pagebreak \\\\-->\n<h3 id=\"notation-information\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#notation-information\"><span class=\"icon icon-link\"></span></a>Notation Information</h3>\n<p>There are two Notation Information messages which can be used to setup a\r\ndevice that needs to interact with the musician using musical bars and beats.</p>\n<p>The Time Signature message can setup Time Signature or indicate a change of\r\nmeter.</p>\n<p><code>F0 7F cc 03 ts ln nn dd qq [nn dd…] F7</code></p>\n<p><code>cc</code> is the SysEx channel (0 to 127).</p>\n<p><code>ts</code> is <code>02</code> if the Time Signature is to be changed now, or <code>42</code> if the Time Signature is to be changed at the end of the currently playing measure.</p>\n<p><code>ln</code> is the number of data bytes following this field. Normally, this will be a <code>3</code> if there is not a compound time signature in the measure.</p>\n<p><code>nn dd</code> are the Numerator and Denominator of the Time Signature, respectively. Like with MIDI File Format’s Time Signature MetaEvent, the Denominator is expressed as a power of 2.</p>\n<p><code>qq</code> is the number of notated 32nd notes in a MIDI quarter note. Again, this is similiar to the same field in MIDI File Format’s Time Signature MetaEvent.</p>\n<p><code>[nn dd …]</code> are optional, additional pairs of num/denom, to define a compound time signature within the same measure.</p>\n<p>The Bar Marker message indicates the start of a musical measure. It could also be used to setup and mark off bars of an introductory “count down”.</p>\n<p><code>F0 7F cc 03 01 lb mb F7</code></p>\n<p><code>cc</code> is the SysEx channel (0 to 127).</p>\n<p><code>lb</code> <code>mb</code> is the desired bar number, with the LSB first (ie, Intel order). This is a signed 14-bit value (low 7 bits are in <code>lb</code>, right-justified, and bits 8 to 14 are in <code>mb</code>, right-justified). Zero and negative numbers up to -8,190 indicate count off measures. For example, a value of -1 (ie, <code>lb mb</code> = <code>7F 7F</code>) means that there is a one measure introduction. A value of zero would indicate no count off. Positive values indicate measures of the piece. The first measure is bar 1 (ie, <code>lb mb</code> = <code>01 00</code>). A maximum neg number (<code>lb mb</code> = <code>00 40</code>) indicates “stopped play” condition. A maximum positive value (<code>lb mb</code> = <code>7E 3F</code>) indicates running condition, but no idea about measure number. This would be used by a device wishing to mark the passage of measures without keeping track of the actual measure number.</p>\n<h3 id=\"setup-message\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#setup-message\"><span class=\"icon icon-link\"></span></a>Setup Message</h3>\n<p>The Setup message can be used to implement one of 19 defined “events”. A master device uses this message to tell slave units what “events” to perform, and when to perform those events. Here’s the general template for the message.</p>\n<p><code>F0 7F cc 04 id hr mn sc fr ff sl sm [more info] F7</code></p>\n<p><code>cc</code> is the SysEx channel (0 to 127).</p>\n<p><code>hr mn sc fr ff</code> is the SMPTE time when the event is to occur. This is just like the Full Frame message, except that there is also a fractional frame parameter, <code>ff</code>, which is <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mn>1</mn><mn>100</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{100}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1901em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">100</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span> of a frame (ie, a value from 0 to 99).</p>\n<p><code>sl sm</code> is this event’s 14-bit Event Number (0 to 16,383). <code>sl</code> is bits 0 to 6, and <code>sm</code> is bits 7 to 13.</p>\n<p><code>id</code> tells what this Event Type is. Depending upon the Type, the message may have additional bytes placed where is. The following values for Event Types are defined, and here’s what each does.</p>\n<!--\\\\ \\pagebreak \\\\-->\n<h3 id=\"special-00\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#special-00\"><span class=\"icon icon-link\"></span></a>Special (<code>00</code>)</h3>\n<p>Contains the setup information that affects a device globally, as opposed to individual tracks, sounds, programs, sequences, etc.). In this case, the Event Number is actually a word which further describes what the event is, as so:</p>\n<p>Time Code Offset (<code>00 00</code>) refers to a relative Time Code offset for each unit. For example, a piece of video and a piece of music that are supposed to go together may be created at different times, and likely have different absolute time code positions. Therefore, one must be offset from the other so that they will match up. Each slave on the daisy-chain needs its own offset so that all can be matched up to the master’s SMPTE start time.</p>\n<p>Enable Event List (<code>01 00</code>) means for a slave to enable execution of events in its internal “list of events” when each one’s respective SMPTE time occurs.</p>\n<p>Disable Event List (<code>02 00</code>) means for a slave to disable execution of events in its internal “list of events”, but not to erase the list.</p>\n<p>Clear Event List (<code>03 00</code>) means for a slave to erase all events in its internal list.</p>\n<p>System Stop (<code>04 00</code>) refers to a time when the slave may shut down. This serves as a protection against Event Starts without Event Stops, tape machines running past the end of a reel, etc.</p>\n<p>Event List Request (<code>05 00</code>) is sent by the master, and requests the slave (whose channel matches the message) to send all events in its list as a series of Setup messages, starting from the SMPTE time in this message.</p>\n<blockquote>\n<p>NOTE: For the first 5 Special messages, the SMPTE time isn’t used and is\r\nignored.</p>\n</blockquote>\n<!--\\\\ \\pagebreak \\\\-->\n<h3 id=\"punch-in-01-and-punch-out-02\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#punch-in-01-and-punch-out-02\"><span class=\"icon icon-link\"></span></a>Punch In (<code>01</code>) and Punch Out (<code>02</code>)</h3>\n<p>These refer to the enabling and disabling of record mode on a slave. The Event Number refers to the track to be recorded. Multiple Punch In and Punch Out points (and any of the other Event Types below) may be specified by sending multiple Setup messages with different SMPTE times.</p>\n<h3 id=\"delete-punch-in-03-and-delete-punch-out-04\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#delete-punch-in-03-and-delete-punch-out-04\"><span class=\"icon icon-link\"></span></a>Delete Punch In (<code>03</code>) and Delete Punch Out (<code>04</code>)</h3>\n<p>Deletes the Punch In or Punch Out (with the matching Event Number and SMPTE Time) from the slave’s event list. In other words, it deletes a previously sent Punch In or Punch Out Setup message.</p>\n<h3 id=\"event-start-05-and-event-stop-06\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#event-start-05-and-event-stop-06\"><span class=\"icon icon-link\"></span></a>Event Start (<code>05</code>) and Event Stop (<code>06</code>)</h3>\n<p>These refer to the start/stop (ie, playback) of some continuous action (ie, an action that begins when an Event Start is received, and continues until an Event Stop is received). The Event Number refers to which action on the slave is to be started/stopped. Such actions may include playback of a specific looped waveform, a fader moving on an automated mixer, etc.</p>\n<h3 id=\"event-start-07-and-event-stop-08-with-additional-info\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#event-start-07-and-event-stop-08-with-additional-info\"><span class=\"icon icon-link\"></span></a>Event Start (<code>07</code>) and Event Stop (<code>08</code>) with additional info</h3>\n<p>Almost the same as the above 2 Event Types, but these have additional bytes before the final 0xF7. Such additional bytes could be for an effect unit’s changing parameters, the volume level of a sound effect being adjusted, etc. The additional info should be nibblized with the lowest bits first. For example, if the Note On message 0x91 0x46 0x7F was to be encoded in some additional info bytes, they would be 01 09 06 04 0F 07.</p>\n<h3 id=\"delete-event-start-09-and-delete-event-stop-0a\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#delete-event-start-09-and-delete-event-stop-0a\"><span class=\"icon icon-link\"></span></a>Delete Event Start (<code>09</code>) and Delete Event Stop (<code>0A</code>)</h3>\n<p>Deletes the Event Start or Event Stop (with the matching Event Number and SMPTE Time) from the slave’s event list. In other words, it deletes a previously sent Event Start or Event Stop Setup message (either the Types without additional info, or with additional info).</p>\n<h3 id=\"cue-point-0b\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#cue-point-0b\"><span class=\"icon icon-link\"></span></a>Cue Point (<code>0B</code>)</h3>\n<p>Sets an action to be triggered (ie, an action that does something once and automatically stops afterward) or a marker at the specified SMPTE time. These include a “hit” point for a sound effect, a marker for an edit point, etc. The Event Number should represent the action or marker. For example, Event Number 3 could be to trigger a car crash sound effect. Then, several car crashes could be specified by sending several Cue Point Setup messages, each with Event Number 3, but different SMPTE times.</p>\n<h3 id=\"cue-point-0c-with-additional-info\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#cue-point-0c-with-additional-info\"><span class=\"icon icon-link\"></span></a>Cue Point (<code>0C</code>) with additional info</h3>\n<p>Like the above, but this message may have additional bytes before the final 0xF7. Such additional bytes could be for an effect unit’s parameters, the volume level of a sound effect, etc. The additional info should be nibblized with the lowest bits first.</p>\n<h3 id=\"delete-cue-point-0d\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#delete-cue-point-0d\"><span class=\"icon icon-link\"></span></a>Delete Cue Point (<code>0D</code>)</h3>\n<p>Deletes one of the preceding 2 Setup messages (with the same Event Number and SMPTE time) from the slave’s event list.</p>\n<h3 id=\"event-name-0e-with-additional-info\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#event-name-0e-with-additional-info\"><span class=\"icon icon-link\"></span></a>Event Name (<code>0E</code>) with additional info</h3>\n<p>This assigns an ascii name to the event with the matching Event Number and SMPTE time. It for the musician’s point of reference. The additional info bytes are the ascii name. For a newline character, include both a carriage return (<code>0x0A</code>) and line feed (<code>0x0D</code>). The ascii bytes are nibblized. For example, ascii <code>‘A’</code> (<code>0x41</code>) becomes the two bytes, 0x01 0x04.</p>\n<!--\\\\ \\pagebreak \\\\-->\n<p>To summarize the interaction between master and slave depending upon “play mode”:</p>\n<h3 id=\"play-mode\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#play-mode\"><span class=\"icon icon-link\"></span></a>Play Mode</h3>\n<p>The master is in normal play at normal or vari-speed rates. The master is sending Quarter Frame messages to the slave. The messages are in ascending order, starting with 0xF1 0x0n and ending with 0xF1 0x7n. If the master is capable of reverse play, then the messages are sent in reverse, starting with 0xF1 0x7n and ending with 0xF1 0x0n.</p>\n<h3 id=\"cue-mode\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#cue-mode\"><span class=\"icon icon-link\"></span></a>Cue Mode</h3>\n<p>The master is being “rocked” or “cued” by hand. For example, a tape machine may have the tape still in contact with the playback head so that the musician can cue the contents of the tape to a specific point. The master is sending Quarter Frame messages to the slave. The messages are in ascending order, starting with 0xF1 0x0n and ending with 0xF1 0x7n. If the master is playing in a reverse direction, then the messages are sent in reverse, starting with 0xF1 0x7n and ending with 0xF1 0x0n. Because the musician may be changing the tape direction rapidly, the order of the Quarter Frames must change along with the tape direction.</p>\n<h3 id=\"fast-forward-or-rewind-mode\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#fast-forward-or-rewind-mode\"><span class=\"icon icon-link\"></span></a>Fast Forward or Rewind Mode</h3>\n<p>The master is rewinding or fast forwarding tape. No contact is made with the playback head. So, no cueing is happening. Therefore, the master only need send the slave periodic Full Frame messages at regular intervals as a rough indication of the master’s position. The SMPTE time indicated by the last Full Frame message actually takes affect upon the reception of the next Quarter Frame message (ie, when Play Mode resumes).</p>\n<!--\\\\ \\pagebreak \\\\-->\n<h2 id=\"general-midi-level-2-1999\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#general-midi-level-2-1999\"><span class=\"icon icon-link\"></span></a>General MIDI Level 2 (1999)</h2>\n<p><strong>General MIDI Level 2</strong><br>\n<a href=\"https://en.wikipedia.org/wiki/General_MIDI_Level_2\" target=\"_blank\" rel=\"nofollow\">https://en.wikipedia.org/wiki/General_MIDI_Level_2</a></p>\n<h3 id=\"gm2-supported-nrpn-parameter-numbers-rpn\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#gm2-supported-nrpn-parameter-numbers-rpn\"><span class=\"icon icon-link\"></span></a>GM2 Supported NRPN Parameter Numbers (RPN)</h3>\n<ul>\n<li>Pitch Bend Sensitivity</li>\n<li>Channel Fine Tune</li>\n<li>Channel Coarse Tune</li>\n<li>Modulation Depth Range (Vibrato Depth Range)</li>\n<li>RPN NULL</li>\n</ul>\n<h3 id=\"supported-universal-system-exclusive-sysex-messages\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#supported-universal-system-exclusive-sysex-messages\"><span class=\"icon icon-link\"></span></a>Supported Universal System Exclusive (SysEx) messages</h3>\n<ul>\n<li>Master Volume</li>\n<li>Master Fine Tuning</li>\n<li>Master Coarse Tuning</li>\n<li>Reverb Type</li>\n<li>Reverb Time</li>\n<li>Chorus Type</li>\n<li>Chorus Mod Rate</li>\n<li>Chorus Mod Depth</li>\n<li>Chorus Feedback</li>\n<li>Chorus Send to Reverb</li>\n<li>Controller Destination Setting</li>\n<li>Scale/Octave Tuning Adjust</li>\n<li>Key-Based Instrument Controllers</li>\n<li>GM2 System On</li>\n</ul>\n<!--\\\\ \\pagebreak \\\\-->\n<h3 id=\"additional-percussion-kit-key-mappings\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#additional-percussion-kit-key-mappings\"><span class=\"icon icon-link\"></span></a>Additional Percussion Kit Key-Mappings</h3>\n<pre class=\"language-text\"><code class=\"language-text code-highlight\"><span class=\"code-line\">027 F1  High Q                     082 A#5 Shaker\r\n</span><span class=\"code-line\">028 F#1 Slap                       083 B5  Jingle Bell\r\n</span><span class=\"code-line\">029 G2  Scratch Push               084 C5  Belltree\r\n</span><span class=\"code-line\">032 G#1 Scratch Pull               085 C#5 Castanets\r\n</span><span class=\"code-line\">033 A1  Sticks                     086 D5  Open Surdo\r\n</span><span class=\"code-line\">034 A#1 Metronome Bell\n</span></code></pre>\n<h3 id=\"bank-1\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#bank-1\"><span class=\"icon icon-link\"></span></a>BANK 1</h3>\n<p>Key: <code>[BANK-MSB]:[BANK-LSB] [Patch-Name]</code></p>\n<pre class=\"language-text\"><code class=\"language-text code-highlight\"><span class=\"code-line\">001:001 Wide Acoustic Grand        001:054 Humming                                 \r\n</span><span class=\"code-line\">001:002 Wide Bright Acoustic       001:055 Analog Voice    \r\n</span><span class=\"code-line\">001:003 Wide Electric Grand        001:056 Bass Hit    \r\n</span><span class=\"code-line\">001:004 Wide Honky-tonk            001:057 Dark Trumpet    \r\n</span><span class=\"code-line\">001:005 Detuned Electric Piano 1   001:058 Trombone 2    \r\n</span><span class=\"code-line\">001:006 Detuned Electric Piano 2   001:060 Muted Trumpet 2    \r\n</span><span class=\"code-line\">001:007 Coupled Harpsichord        001:061 French Horn 2    \r\n</span><span class=\"code-line\">001:008 Pulse Clavinet             001:062 Brass Section 2    \r\n</span><span class=\"code-line\">001:012 Wet Vibraphone             001:063 Synth Brass 3    \r\n</span><span class=\"code-line\">001:013 Wide Marimba               001:064 Synth Brass 4    \r\n</span><span class=\"code-line\">001:015 Church Bell                001:081 Square Wave    \r\n</span><span class=\"code-line\">001:017 Detuned Organ 1            001:085 Wire Lead    \r\n</span><span class=\"code-line\">001:018 Detuned Organ 2            001:088 Delayed Lead    \r\n</span><span class=\"code-line\">001:020 Church Organ 2             001:090 Sine Pad    \r\n</span><span class=\"code-line\">001:021 Puff Organ                 001:092 Itopia    \r\n</span><span class=\"code-line\">001:022 Italian Accordion          001:099 Synth Mallet    \r\n</span><span class=\"code-line\">001:025 Ukulele                    001:103 Echo Bell    \r\n</span><span class=\"code-line\">001:026 12-String Guitar           001:105 Sitar 2    \r\n</span><span class=\"code-line\">001:027 Hawaiian Guitar            001:108 Taisho Koto    \r\n</span><span class=\"code-line\">001:028 Chorus Guitar              001:116 Castanets    \r\n</span><span class=\"code-line\">001:029 Funk Guitar                001:117 Concert Bass Drum    \r\n</span><span class=\"code-line\">001:030 Guitar Pinch               001:118 Melodic Tom 2    \r\n</span><span class=\"code-line\">001:031 Feedback Guitar            001:119 808 Tom    \r\n</span><span class=\"code-line\">001:032 Guitar Harmonics           001:121 Guitar Cut Noise    \r\n</span><span class=\"code-line\">001:034 Finger Slap                001:122 Flute Key Click    \r\n</span><span class=\"code-line\">001:039 Synth Bass 101             001:123 Rain    \r\n</span><span class=\"code-line\">001:040 Synth Bass 4               001:124 Dog    \r\n</span><span class=\"code-line\">001:041 Slow Violin                001:125 Telephone 2    \r\n</span><span class=\"code-line\">001:047 Yang Qin                   001:126 Car-Engine    \r\n</span><span class=\"code-line\">001:049 Orchestra Strings          001:127 Laughing    \r\n</span><span class=\"code-line\">001:051 Synth Strings 3            001:128 Machine Gun    \r\n</span><span class=\"code-line\">001:053 Choir Aahs 2                    \n</span></code></pre>\n<h3 id=\"bank-2\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#bank-2\"><span class=\"icon icon-link\"></span></a>BANK 2</h3>\n<pre class=\"language-text\"><code class=\"language-text code-highlight\"><span class=\"code-line\">002:001 Dark Acoustic Grand         002:056 6th Hit\r\n</span><span class=\"code-line\">002:005 Electric Piano 1 Variation  002:058 Bright Trombone\r\n</span><span class=\"code-line\">002:006 Electric Piano 2 Variation  002:063 Analog Brass 1\r\n</span><span class=\"code-line\">002:007 Wide Harpsichord            002:064 Analog Brass 2\r\n</span><span class=\"code-line\">002:015 Carillon                    002:081 Sine Wave\r\n</span><span class=\"code-line\">002:017 60’s Organ 1                002:082 Doctor Solo\r\n</span><span class=\"code-line\">002:018 Organ 5                     002:103 Echo Pan\r\n</span><span class=\"code-line\">002:020 Rock Organ                  002:119 Electric Percussion\r\n</span><span class=\"code-line\">002:025 Open Nylon Guitar           002:121 Horse-Gallop\r\n</span><span class=\"code-line\">002:026 Mandolin                    002:123 Thunder\r\n</span><span class=\"code-line\">002:028 Mid Tone Guitar             002:124 Horse-Gallop\r\n</span><span class=\"code-line\">002:029 Funk Guitar 2               002:125 Door Creaking\r\n</span><span class=\"code-line\">002:031 Distortion Rtm Guitar       002:126 Car-Stop\r\n</span><span class=\"code-line\">002:039 Synth Bass 3                002:127 Screaming\r\n</span><span class=\"code-line\">002:040 Rubber Bass                 002:128 Lasergun\r\n</span><span class=\"code-line\">002:049 60’s Strings                                            \n</span></code></pre>\n<h3 id=\"bank-3\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#bank-3\"><span class=\"icon icon-link\"></span></a>BANK 3</h3>\n<pre class=\"language-text\"><code class=\"language-text code-highlight\"><span class=\"code-line\">003:005 60’s Electric Piano        003:056 Euro Hit\r\n</span><span class=\"code-line\">003:006 Electric Piano Legend      003:063 Jump Brass\r\n</span><span class=\"code-line\">003:007 Open Harpsichord           003:082 Natural Lead\r\n</span><span class=\"code-line\">003:017 Organ 4                    003:123 Wind\r\n</span><span class=\"code-line\">003:025 Nylon Guitar 2             003:124 Bird 2\r\n</span><span class=\"code-line\">003:026 Steel + Body               003:125 Door Closing\r\n</span><span class=\"code-line\">003:029 Jazz Man                   003:126 Car-Crash\r\n</span><span class=\"code-line\">003:039 Clavi Bass                 003:127 Punch\r\n</span><span class=\"code-line\">003:040 Attack Pulse               003:128 Explosion\n</span></code></pre>\n<h3 id=\"banks-4-8\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#banks-4-8\"><span class=\"icon icon-link\"></span></a>BANKS 4-8</h3>\n<pre class=\"language-text\"><code class=\"language-text code-highlight\"><span class=\"code-line\">004:006 Electric Piano Phase       005:123 Bubble\r\n</span><span class=\"code-line\">004:039 Hammer                     005:125 Wind Chimes\r\n</span><span class=\"code-line\">004:082 Sequenced Saw              005:126 Siren\r\n</span><span class=\"code-line\">004:123 Stream                     005:127 Footsteps\r\n</span><span class=\"code-line\">004:125 Scratch\r\n</span><span class=\"code-line\">004:126 Car-Crash\r\n</span><span class=\"code-line\">004:127 Heart Beat\r\n</span><span class=\"code-line\">\r\n</span><span class=\"code-line\">006:126 Train                      007:126 Jetplane\r\n</span><span class=\"code-line\">\r\n</span><span class=\"code-line\">008:126 Starship\n</span></code></pre>\n<!--\\\\ \\pagebreak \\\\-->\n<h2 id=\"additional-standards\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#additional-standards\"><span class=\"icon icon-link\"></span></a>Additional Standards</h2>\n<p>Generally GS MIDI Standards foreshadowed what seems to have become<br>\n<strong>General MIDI Layer 2</strong> (GM2).</p>\n<p><strong>Yamaha XG</strong> is worth checking out in addition to the XGLite standard.</p>\n<p><strong>MIDI Standard Comparison</strong><br>\n<a href=\"https://en.wikipedia.org/wiki/Comparison_of_MIDI_standards\" target=\"_blank\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Comparison_of_MIDI_standards</a></p>\n<p><strong>DLS</strong> (Y—I’m sure you can find much more adequate links)<br>\n<a href=\"https://www.loc.gov/preservation/digital/formats/fdd/fdd000118.shtml\" target=\"_blank\" rel=\"nofollow\">https://www.loc.gov/preservation/digital/formats/fdd/fdd000118.shtml</a></p>\n<section data-footnotes class=\"footnotes\"><h2 class=\"sr-only\" id=\"footnote-label\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#footnote-label\"><span class=\"icon icon-link\"></span></a>Footnotes</h2>\n<ol>\n<li id=\"user-content-fn-tma\">\n<p>“The MIDI Association” — <a href=\"https://www.midi.org\" target=\"_blank\" rel=\"nofollow\">https://www.midi.org</a> <a href=\"#user-content-fnref-tma\" data-footnote-backref class=\"data-footnote-backref\" aria-label=\"Back to content\">↩</a></p>\n</li>\n<li id=\"user-content-fn-smpte\">\n<p>“Society of Motion Picture and Television Engineers” — <a href=\"https://www.smpte.org\" target=\"_blank\" rel=\"nofollow\">https://www.smpte.org</a> <a href=\"#user-content-fnref-smpte\" data-footnote-backref class=\"data-footnote-backref\" aria-label=\"Back to content\">↩</a></p>\n</li>\n<li id=\"user-content-fn-usec\">\n<p>“Microseconds” 1,000,000 = 1 microsecond; e.g. µsec, usec, musec <a href=\"#user-content-fnref-usec\" data-footnote-backref class=\"data-footnote-backref\" aria-label=\"Back to content\">↩</a></p>\n</li>\n</ol>\n</section>","title":"smfio","url":"http://github.com/tfwio/smfio","date":"2018-10-18","subtitle":"smfio: tech-reference, standard midi file-format reference & gm2 addendum","author":"T.F.W. (github.com/tfwio)","based-on":"Standard MIDI-File Format Spec. 1.1, updated","Copyright":"International MIDI Association (IMMA)","group":"spec","category":["spec","smfio","midi","csharp"]}},"__N_SSG":true}